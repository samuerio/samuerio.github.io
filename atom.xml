<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>issUn</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhenghe39.com/"/>
  <updated>2017-01-11T15:31:37.000Z</updated>
  <id>http://zhenghe39.com/</id>
  
  <author>
    <name>issUn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2016年终总结</title>
    <link href="http://zhenghe39.com/2017/01/11/2016%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://zhenghe39.com/2017/01/11/2016年终总结/</id>
    <published>2017-01-11T15:29:38.000Z</published>
    <updated>2017-01-11T15:31:37.000Z</updated>
    
    <content type="html">&lt;p&gt;2016是我进阶成长的重要一年。开通了Github账户，并且也将自己独立完成的作品开源了出来，也算是对开源社区贡献了自己的一份力吧:-D。拥有了自己的独立博客，并且博客的主题还是自己设计的，果然还是自己的主题用着舒服。这一整年里也做了许多尝试，Node制作了微信公众号的后台，Redux+React+React-router+Antd组件+Java制作了技能树应用，使用Jersey来制作了Restful API，也尝试用组件化的思维完成了一些Java组件&amp;amp;&amp;amp;前端组件，收获颇丰。&lt;/p&gt;
&lt;h3 id=&quot;Github开源项目&quot;&gt;&lt;a href=&quot;#Github开源项目&quot; class=&quot;headerlink&quot; title=&quot;Github开源项目&quot;&gt;&lt;/a&gt;Github开源项目&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;3月份创建了weiXinHelper项目&lt;/li&gt;
&lt;li&gt;5月份创建了web-component项目&lt;/li&gt;
&lt;li&gt;7月份创建了hexo-theme-cream项目&lt;/li&gt;
&lt;li&gt;8月份创建了component-poi项目&lt;/li&gt;
&lt;li&gt;11月份创建了skilltree-app项目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;github统计：总共完成了469 contributions，拥有了21个Repositories。&lt;/p&gt;
&lt;h3 id=&quot;阅读书籍&quot;&gt;&lt;a href=&quot;#阅读书籍&quot; class=&quot;headerlink&quot; title=&quot;阅读书籍&quot;&gt;&lt;/a&gt;阅读书籍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;《锋利的jQuery》(不错的jQuery入门书籍)&lt;/li&gt;
&lt;li&gt;《The Node Beginner Book》（非常通俗易懂的Node入门书籍）&lt;/li&gt;
&lt;li&gt;《深入浅出Nodejs》（虽然篇幅少，但都是干货）&lt;/li&gt;
&lt;li&gt;《ES6-in-depth》&lt;/li&gt;
&lt;li&gt;《尽管去做-无压工作的艺术》&lt;/li&gt;
&lt;li&gt;《Javascript高级程序设计》（Javascript经典书籍，收益颇丰，值得一读）&lt;/li&gt;
&lt;li&gt;《Maven实战》&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;展望&quot;&gt;&lt;a href=&quot;#展望&quot; class=&quot;headerlink&quot; title=&quot;展望&quot;&gt;&lt;/a&gt;展望&lt;/h3&gt;&lt;p&gt;今年最火的人工智能非赢过人类世界国军的Alpha Go莫属。可预见的未来是，人工智能将越来越普及，并且会深远地影响人类社会。在新的一年里，我希望掌握一些「人工智能」方面的编程，并懂得使用Hadoop、Spark等大数据的工具来挖掘数据的魅力。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2016是我进阶成长的重要一年。开通了Github账户，并且也将自己独立完成的作品开源了出来，也算是对开源社区贡献了自己的一份力吧:-D。拥有了自己的独立博客，并且博客的主题还是自己设计的，果然还是自己的主题用着舒服。这一整年里也做了许多尝试，Node制作了微信公众号的后台
    
    </summary>
    
      <category term="编程札记" scheme="http://zhenghe39.com/categories/%E7%BC%96%E7%A8%8B%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="随笔" scheme="http://zhenghe39.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Java Web应用中调优线程池的重要性</title>
    <link href="http://zhenghe39.com/2017/01/09/Java-Web%E5%BA%94%E7%94%A8%E4%B8%AD%E8%B0%83%E4%BC%98%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7/"/>
    <id>http://zhenghe39.com/2017/01/09/Java-Web应用中调优线程池的重要性/</id>
    <published>2017-01-09T05:30:49.000Z</published>
    <updated>2017-01-10T15:42:12.000Z</updated>
    
    <content type="html">&lt;p&gt;转载自&lt;a href=&quot;http://www.infoq.com/cn/articles/the-importance-of-thread-pool-in-java-web-application&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/articles/the-importance-of-thread-pool-in-java-web-application&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不论你是否关注，Java Web应用都或多或少的使用了线程池来处理请求。线程池的实现细节可能会被忽视，但是有关于线程池的使用和调优迟早是需要了解的。本文主要介绍Java线程池的使用和如何正确的配置线程池。&lt;/p&gt;
&lt;h3 id=&quot;单线程&quot;&gt;&lt;a href=&quot;#单线程&quot; class=&quot;headerlink&quot; title=&quot;单线程&quot;&gt;&lt;/a&gt;单线程&lt;/h3&gt;&lt;p&gt;我们先从基础开始。无论使用哪种应用服务器或者框架（如Tomcat、Jetty等），他们都有类似的基础实现。Web服务的基础是套接字（socket），套接字负责监听端口，等待TCP连接，并接受TCP连接。一旦TCP连接被接受，即可从新创建的TCP连接中读取和发送数据。&lt;/p&gt;
&lt;p&gt;为了能够理解上述流程，我们不直接使用任何应用服务器，而是从零开始构建一个简单的Web服务。该服务是大部分应用服务器的缩影。一个简单的单线程Web服务大概是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     handleRequest(socket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码创建了一个服务端套接字（&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/net/ServerSocket.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ServerSocket&lt;/a&gt;），监听8080端口，然后循环检查这个套接字，查看是否有新的连接。一旦有新的连接被接受，这个套接字会被传入handleRequest方法。这个方法会将数据流解析成HTTP请求，进行响应，并写入响应数据。在这个简单的示例中，handleRequest方法仅仅实现数据流的读入，返回一个简单的响应数据。在通常实现中，该方法还会复杂的多，比如从数据库读取数据等。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String response =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “HTTP/&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK\r\n” +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “Content-type: text/plain\r\n” +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “\r\n” +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “Hello World\r\n”;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Socket socket)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// Read the input stream, and return “200 OK”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   BufferedReader in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(socket.getInputStream()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   log.info(in.readLine());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   OutputStream out = socket.getOutputStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   out.write(response.getBytes(StandardCharsets.UTF_8));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   socket.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于只有一个线程来处理请求，每个请求都必须等待前一个请求处理完成之后才能够被响应。假设一个请求响应时间为100毫秒，那么这个服务器的每秒响应数（tps）只有10。&lt;/p&gt;
&lt;h3 id=&quot;多线程&quot;&gt;&lt;a href=&quot;#多线程&quot; class=&quot;headerlink&quot; title=&quot;多线程&quot;&gt;&lt;/a&gt;多线程&lt;/h3&gt;&lt;p&gt;虽然handleRequest方法可能阻塞在IO上，但是CPU仍然可以处理更多的请求。但是在单线程情况下，这是无法做到的。因此，可以通过创建多线程的方式，来提升服务器的并行处理能力。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandleRequestRunnable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Socket socket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandleRequestRunnable&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Socket socket)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.socket = socket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     handleRequest(socket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandleRequestRunnable(socket)).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里，accept()方法仍然在主线程中调用，但是一旦TCP连接建立之后，将会创建一个新的线程来处理新的请求，既在新的线程中执行前文中的handleRequest方法。&lt;/p&gt;
&lt;p&gt;通过创建新的线程，主线程可以继续接受新的TCP连接，且这些信求可以并行的处理。这个方式称为“每个请求一个线程（thread per request）”。当然，还有其他方式来提高处理性能，例如NGINX和Node.js使用的异步事件驱动模型，但是它们不使用线程池，因此不在本文的讨论范围。&lt;/p&gt;
&lt;p&gt;在每个请求一个线程实现中，创建一个线程（和后续的销毁）开销是非常昂贵的，因为JVM和操作系统都需要分配资源。另外，上面的实现还有一个问题，即创建的线程数是不可控的，这将可能导致系统资源被迅速耗尽。&lt;/p&gt;
&lt;h3 id=&quot;资源耗尽&quot;&gt;&lt;a href=&quot;#资源耗尽&quot; class=&quot;headerlink&quot; title=&quot;资源耗尽&quot;&gt;&lt;/a&gt;资源耗尽&lt;/h3&gt;&lt;p&gt;每个线程都需要一定的栈内存空间。在最近的64位JVM中，默认的栈大小是1024KB。如果服务器收到大量请求，或者handleRequest方法执行很慢，服务器可能因为创建了大量线程而崩溃。例如有1000个并行的请求，创建出来的1000个线程需要使用1GB的JVM内存作为线程栈空间。另外，每个线程代码执行过程中创建的对象，还可能会在堆上创建对象。这样的情况恶化下去，将会超出JVM堆内存，并产生大量的垃圾回收操作，最终引发内存溢出（OutOfMemoryErrors）。&lt;/p&gt;
&lt;p&gt;这些线程不仅仅会消耗内存，它们还会使用其他有限的资源，例如文件句柄、数据库连接等。不可控的创建线程，还可能引发其他类型的错误和崩溃。因此，避免资源耗尽的一个重要方式，就是避免不可控的数据结构。&lt;/p&gt;
&lt;p&gt;顺便说下，由于线程栈大小引发的内存问题，可以通过-Xss开关来调整栈大小。缩小线程栈大小之后，可以减少每个线程的开销，但是可能会引发栈溢出（StackOverflowErrors）。对于一般应用程序而言，默认的1024KB过于富裕，调小为256KB或者512KB可能更为合适。Java允许的最小值是160KB。&lt;/p&gt;
&lt;h3 id=&quot;线程池&quot;&gt;&lt;a href=&quot;#线程池&quot; class=&quot;headerlink&quot; title=&quot;线程池&quot;&gt;&lt;/a&gt;线程池&lt;/h3&gt;&lt;p&gt;为了避免持续创建新线程，可以通过使用简单的线程池来限定线程池的上限。线程池会管理所有线程，如果线程数还没有达到上限，线程池会创建线程到上限，且尽可能复用空闲的线程。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExecutorService executor = Executors.newFixedThreadPool(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   executor.submit( &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandleRequestRunnable(socket) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这个示例中，没有直接创建线程，而是使用了ExecutorService。它将需要执行的任务（需要实现Runnables接口）提交到线程池，使用线程池中的线程执行代码。示例中，使用线程数量为4的固定大小线程池来处理所有请求。这限制了处理请求的线程数量，也限制了资源的使用。&lt;/p&gt;
&lt;p&gt;除了通过&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool%28int%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;newFixedThreadPool&lt;/a&gt;方法创建固定大小线程池，Executors类还提供了&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;newCachedThreadPool&lt;/a&gt;方法。复用线程池还是有可能导致不可控的线程数，但是它会尽可能使用之前已经创建的空闲线程。通常该类型线程池适合使用在不会被外部资源阻塞的短任务上。&lt;/p&gt;
&lt;h3 id=&quot;工作队列&quot;&gt;&lt;a href=&quot;#工作队列&quot; class=&quot;headerlink&quot; title=&quot;工作队列&quot;&gt;&lt;/a&gt;工作队列&lt;/h3&gt;&lt;p&gt;使用了固定大小线程池之后，如果所有的线程都繁忙，再新来一个请求将会发生什么呢？ThreadPoolExecutor使用一个队列来保存等待处理的请求，固定大小线程池默认使用无限制的链表。注意，这又可能引起资源耗尽问题，但只要线程处理的速度大于队列增长的速度就不会发生。然后前面示例中，每个排队的请求都会持有套接字，在一些操作系统中，这将会消耗文件句柄。由于操作系统会限制进程打开的文件句柄数，因此最好限制下工作队列的大小。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ExecutorService &lt;span class=&quot;title&quot;&gt;newBoundedFixedThreadPool&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nThreads, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; capacity)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ThreadPoolExecutor(nThreads, nThreads,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;number&quot;&gt;0L&lt;/span&gt;, TimeUnit.MILLISECONDS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(capacity),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ThreadPoolExecutor.DiscardPolicy());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boundedThreadPoolServerSocket&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ExecutorService executor = newBoundedFixedThreadPool(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     executor.submit( &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandleRequestRunnable(socket) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们没有直接使用Executors.newFixedThreadPool方法来创建线程池，而是自己构建了ThreadPoolExecutor对象，并将工作队列长度限制为16个元素。&lt;/p&gt;
&lt;p&gt;如果所有的线程都繁忙，新的任务将会填充到队列中，由于队列限制了大小为16个元素，如果超过这个限制，就需要由构造ThreadPoolExecutor对象时的最后一个参数来处理了。示例中，使用了&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.DiscardPolicy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;抛弃策略（DiscardPolicy）&lt;/a&gt;，即当队列到达上限时，将抛弃新来的任务。初次之外，还有&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中止策略（AbortPolicy）&lt;/a&gt;和&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.CallerRunsPolicy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;调用者执行策略（CallerRunsPolicy）&lt;/a&gt;。前者将抛出一个异常，而后者会再调用者线程中执行任务。&lt;/p&gt;
&lt;p&gt;对于Web应用来说，最优的默认策略应该是抛弃或者中止策略，并返回一个错误给客户端（如&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP 503&lt;/a&gt;错误）。当然也可以通过增加工作队列长度的方式，避免抛弃客户端请求，但是用户请求一般不愿意进行长时间的等待，且这样会更多的消耗服务器资源。工作队列的用途，不是无限制的响应客户端请求，而是平滑突发暴增的请求。通常情况下，工作队列应该是空的。&lt;/p&gt;
&lt;h3 id=&quot;线程数调优&quot;&gt;&lt;a href=&quot;#线程数调优&quot; class=&quot;headerlink&quot; title=&quot;线程数调优&quot;&gt;&lt;/a&gt;线程数调优&lt;/h3&gt;&lt;p&gt;前面的示例展示了如何创建和使用线程池，但是，使用线程池的核心问题在于应该使用多少线程。首先，我们要确保达到线程上限时，不会引起资源耗尽。这里的资源包括内存（堆和栈）、打开文件句柄数量、TCP连接数、远程数据库连接数和其他有限的资源。特别的，如果线程任务是计算密集型的，CPU核心数量也是资源限制之一，一般情况下线程数量不要超过CPU核心数量。&lt;/p&gt;
&lt;p&gt;由于线程数的选定依赖于应用程序的类型，可能需要经过大量性能测试之后，才能得出最优的结果。当然，也可以通过增加资源数的方式，来提升应用程序的性能。例如，修改JVM堆内存大小，或者修改操作系统的文件句柄上限等。然后，这些调整最终还是会触及理论上限。&lt;/p&gt;
&lt;h3 id=&quot;利特尔法则&quot;&gt;&lt;a href=&quot;#利特尔法则&quot; class=&quot;headerlink&quot; title=&quot;利特尔法则&quot;&gt;&lt;/a&gt;利特尔法则&lt;/h3&gt;&lt;p&gt;利特尔法则描述了在稳定系统中，三个变量之间的关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNc79gw1fbkekly6g5j308j01sdfn.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中L表示平均请求数量，λ表示请求的频率，W表示响应请求的平均时间。举例来说，如果每秒请求数为10次，每个请求处理时间为1秒，那么在任何时刻都有10个请求正在被处理。回到我们的话题，就是需要使用10个线程来进行处理。如果单个请求的处理时间翻倍，那么处理的线程数也要翻倍，变成20个。&lt;/p&gt;
&lt;p&gt;理解了处理时间对于请求处理效率的影响之后，我们会发现，通常理论上限可能不是线程池大小的最佳值。线程池上限还需要参考任务处理时间。&lt;/p&gt;
&lt;p&gt;假设JVM可以并行处理1000个任务，如果每个请求处理时间不超过30秒，那么在最坏情况下，每秒最多只能处理33.3个请求。然而，如果每个请求只需要500毫秒，那么应用程序每秒可以处理2000个请求。&lt;/p&gt;
&lt;p&gt;作者 金灵杰 发布于 2016年2月16日 | 欲知区块链、VR、TensorFlow等潮流技术和框架，请锁定QCon北京站！ 8  讨论&lt;br&gt;分享到： 微博 微信 Facebook Twitter 有道云笔记 邮件分享&lt;br&gt;稍后阅读我的阅读清单&lt;br&gt;不论你是否关注，Java Web应用都或多或少的使用了线程池来处理请求。线程池的实现细节可能会被忽视，但是有关于线程池的使用和调优迟早是需要了解的。本文主要介绍Java线程池的使用和如何正确的配置线程池。&lt;/p&gt;
&lt;p&gt;单线程&lt;/p&gt;
&lt;p&gt;我们先从基础开始。无论使用哪种应用服务器或者框架（如Tomcat、Jetty等），他们都有类似的基础实现。Web服务的基础是套接字（socket），套接字负责监听端口，等待TCP连接，并接受TCP连接。一旦TCP连接被接受，即可从新创建的TCP连接中读取和发送数据。&lt;/p&gt;
&lt;p&gt;为了能够理解上述流程，我们不直接使用任何应用服务器，而是从零开始构建一个简单的Web服务。该服务是大部分应用服务器的缩影。一个简单的单线程Web服务大概是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     handleRequest(socket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码创建了一个服务端套接字（ServerSocket），监听8080端口，然后循环检查这个套接字，查看是否有新的连接。一旦有新的连接被接受，这个套接字会被传入handleRequest方法。这个方法会将数据流解析成HTTP请求，进行响应，并写入响应数据。在这个简单的示例中，handleRequest方法仅仅实现数据流的读入，返回一个简单的响应数据。在通常实现中，该方法还会复杂的多，比如从数据库读取数据等。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String response =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “HTTP/&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK\r\n” +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “Content-type: text/plain\r\n” +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “\r\n” +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   “Hello World\r\n”;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Socket socket)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// Read the input stream, and return “200 OK”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   BufferedReader in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(socket.getInputStream()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   log.info(in.readLine());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   OutputStream out = socket.getOutputStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   out.write(response.getBytes(StandardCharsets.UTF_8));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   socket.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关厂商内容&lt;/p&gt;
&lt;p&gt;关于红包、SSD云盘等核心技术集锦！ 基于KVM架构的新一代云主机，如何让速度更快更稳定？ 一项关于提升云主机稳定性的实践 基于KVM架构的新一代云主机，如何让速度更快更稳定？ 杭州免费沙龙：从技术实践看如何提升企业研发效能&lt;br&gt;由于只有一个线程来处理请求，每个请求都必须等待前一个请求处理完成之后才能够被响应。假设一个请求响应时间为100毫秒，那么这个服务器的每秒响应数（tps）只有10。&lt;/p&gt;
&lt;p&gt;多线程&lt;/p&gt;
&lt;p&gt;虽然handleRequest方法可能阻塞在IO上，但是CPU仍然可以处理更多的请求。但是在单线程情况下，这是无法做到的。因此，可以通过创建多线程的方式，来提升服务器的并行处理能力。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandleRequestRunnable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Socket socket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandleRequestRunnable&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Socket socket)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.socket = socket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     handleRequest(socket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandleRequestRunnable(socket)).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里，accept()方法仍然在主线程中调用，但是一旦TCP连接建立之后，将会创建一个新的线程来处理新的请求，既在新的线程中执行前文中的handleRequest方法。&lt;/p&gt;
&lt;p&gt;通过创建新的线程，主线程可以继续接受新的TCP连接，且这些信求可以并行的处理。这个方式称为“每个请求一个线程（thread per request）”。当然，还有其他方式来提高处理性能，例如NGINX和Node.js使用的异步事件驱动模型，但是它们不使用线程池，因此不在本文的讨论范围。&lt;/p&gt;
&lt;p&gt;在每个请求一个线程实现中，创建一个线程（和后续的销毁）开销是非常昂贵的，因为JVM和操作系统都需要分配资源。另外，上面的实现还有一个问题，即创建的线程数是不可控的，这将可能导致系统资源被迅速耗尽。&lt;/p&gt;
&lt;p&gt;资源耗尽&lt;/p&gt;
&lt;p&gt;每个线程都需要一定的栈内存空间。在最近的64位JVM中，默认的栈大小是1024KB。如果服务器收到大量请求，或者handleRequest方法执行很慢，服务器可能因为创建了大量线程而崩溃。例如有1000个并行的请求，创建出来的1000个线程需要使用1GB的JVM内存作为线程栈空间。另外，每个线程代码执行过程中创建的对象，还可能会在堆上创建对象。这样的情况恶化下去，将会超出JVM堆内存，并产生大量的垃圾回收操作，最终引发内存溢出（OutOfMemoryErrors）。&lt;/p&gt;
&lt;p&gt;这些线程不仅仅会消耗内存，它们还会使用其他有限的资源，例如文件句柄、数据库连接等。不可控的创建线程，还可能引发其他类型的错误和崩溃。因此，避免资源耗尽的一个重要方式，就是避免不可控的数据结构。&lt;/p&gt;
&lt;p&gt;顺便说下，由于线程栈大小引发的内存问题，可以通过-Xss开关来调整栈大小。缩小线程栈大小之后，可以减少每个线程的开销，但是可能会引发栈溢出（StackOverflowErrors）。对于一般应用程序而言，默认的1024KB过于富裕，调小为256KB或者512KB可能更为合适。Java允许的最小值是160KB。&lt;/p&gt;
&lt;p&gt;线程池&lt;/p&gt;
&lt;p&gt;为了避免持续创建新线程，可以通过使用简单的线程池来限定线程池的上限。线程池会管理所有线程，如果线程数还没有达到上限，线程池会创建线程到上限，且尽可能复用空闲的线程。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExecutorService executor = Executors.newFixedThreadPool(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   executor.submit( &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandleRequestRunnable(socket) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这个示例中，没有直接创建线程，而是使用了ExecutorService。它将需要执行的任务（需要实现Runnables接口）提交到线程池，使用线程池中的线程执行代码。示例中，使用线程数量为4的固定大小线程池来处理所有请求。这限制了处理请求的线程数量，也限制了资源的使用。&lt;/p&gt;
&lt;p&gt;除了通过newFixedThreadPool方法创建固定大小线程池，Executors类还提供了newCachedThreadPool方法。复用线程池还是有可能导致不可控的线程数，但是它会尽可能使用之前已经创建的空闲线程。通常该类型线程池适合使用在不会被外部资源阻塞的短任务上。&lt;/p&gt;
&lt;p&gt;工作队列&lt;/p&gt;
&lt;p&gt;使用了固定大小线程池之后，如果所有的线程都繁忙，再新来一个请求将会发生什么呢？ThreadPoolExecutor使用一个队列来保存等待处理的请求，固定大小线程池默认使用无限制的链表。注意，这又可能引起资源耗尽问题，但只要线程处理的速度大于队列增长的速度就不会发生。然后前面示例中，每个排队的请求都会持有套接字，在一些操作系统中，这将会消耗文件句柄。由于操作系统会限制进程打开的文件句柄数，因此最好限制下工作队列的大小。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ExecutorService &lt;span class=&quot;title&quot;&gt;newBoundedFixedThreadPool&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nThreads, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; capacity)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ThreadPoolExecutor(nThreads, nThreads,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;number&quot;&gt;0L&lt;/span&gt;, TimeUnit.MILLISECONDS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(capacity),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ThreadPoolExecutor.DiscardPolicy());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boundedThreadPoolServerSocket&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ServerSocket listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ExecutorService executor = newBoundedFixedThreadPool(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Socket socket = listener.accept();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     executor.submit( &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandleRequestRunnable(socket) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   listener.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们没有直接使用Executors.newFixedThreadPool方法来创建线程池，而是自己构建了ThreadPoolExecutor对象，并将工作队列长度限制为16个元素。&lt;/p&gt;
&lt;p&gt;如果所有的线程都繁忙，新的任务将会填充到队列中，由于队列限制了大小为16个元素，如果超过这个限制，就需要由构造ThreadPoolExecutor对象时的最后一个参数来处理了。示例中，使用了抛弃策略（DiscardPolicy），即当队列到达上限时，将抛弃新来的任务。初次之外，还有中止策略（AbortPolicy）和调用者执行策略（CallerRunsPolicy）。前者将抛出一个异常，而后者会再调用者线程中执行任务。&lt;/p&gt;
&lt;p&gt;对于Web应用来说，最优的默认策略应该是抛弃或者中止策略，并返回一个错误给客户端（如HTTP 503错误）。当然也可以通过增加工作队列长度的方式，避免抛弃客户端请求，但是用户请求一般不愿意进行长时间的等待，且这样会更多的消耗服务器资源。工作队列的用途，不是无限制的响应客户端请求，而是平滑突发暴增的请求。通常情况下，工作队列应该是空的。&lt;/p&gt;
&lt;p&gt;线程数调优&lt;/p&gt;
&lt;p&gt;前面的示例展示了如何创建和使用线程池，但是，使用线程池的核心问题在于应该使用多少线程。首先，我们要确保达到线程上限时，不会引起资源耗尽。这里的资源包括内存（堆和栈）、打开文件句柄数量、TCP连接数、远程数据库连接数和其他有限的资源。特别的，如果线程任务是计算密集型的，CPU核心数量也是资源限制之一，一般情况下线程数量不要超过CPU核心数量。&lt;/p&gt;
&lt;p&gt;由于线程数的选定依赖于应用程序的类型，可能需要经过大量性能测试之后，才能得出最优的结果。当然，也可以通过增加资源数的方式，来提升应用程序的性能。例如，修改JVM堆内存大小，或者修改操作系统的文件句柄上限等。然后，这些调整最终还是会触及理论上限。&lt;/p&gt;
&lt;p&gt;利特尔法则&lt;/p&gt;
&lt;p&gt;利特尔法则描述了在稳定系统中，三个变量之间的关系。&lt;/p&gt;
&lt;p&gt;其中L表示平均请求数量，λ表示请求的频率，W表示响应请求的平均时间。举例来说，如果每秒请求数为10次，每个请求处理时间为1秒，那么在任何时刻都有10个请求正在被处理。回到我们的话题，就是需要使用10个线程来进行处理。如果单个请求的处理时间翻倍，那么处理的线程数也要翻倍，变成20个。&lt;/p&gt;
&lt;p&gt;理解了处理时间对于请求处理效率的影响之后，我们会发现，通常理论上限可能不是线程池大小的最佳值。线程池上限还需要参考任务处理时间。&lt;/p&gt;
&lt;p&gt;假设JVM可以并行处理1000个任务，如果每个请求处理时间不超过30秒，那么在最坏情况下，每秒最多只能处理33.3个请求。然而，如果每个请求只需要500毫秒，那么应用程序每秒可以处理2000个请求。&lt;/p&gt;
&lt;h3 id=&quot;拆分线程池&quot;&gt;&lt;a href=&quot;#拆分线程池&quot; class=&quot;headerlink&quot; title=&quot;拆分线程池&quot;&gt;&lt;/a&gt;拆分线程池&lt;/h3&gt;&lt;p&gt;在微服务或者面向服务架构（SOA）中，通常需要访问多个后端服务。如果其中一个服务性能下降，可能会引起线程池线程耗尽，从而影响对其他服务的请求。&lt;/p&gt;
&lt;p&gt;应对后端服务失效的有效办法是隔离每个服务所使用的线程池。在这种模式下，仍然有一个分派的线程池，将任务分派到不同的后端请求线程池中。该线程池可能因为一个缓慢的后端而没有负载，而将负担转移到了请求缓慢后端的线程池中。&lt;/p&gt;
&lt;p&gt;另外，多线程池模式还需要避免死锁问题。如果每个线程都阻塞在等待未被处理请求的结果上时，就会发生死锁。因此，多线程池模式下，需要了解每个线程池执行的任务和它们之间的依赖，这样可以尽可能避免死锁问题。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;即使没有在应用程序中直接使用线程池，它们也很有可能在应用程序中被应用服务器或者框架间接使用。Tomcat、JBoss、Undertow、Dropwizard等框架，都提供了调优线程池（servlet执行使用的线程池）的选项。&lt;/p&gt;
&lt;p&gt;希望本文能够提升对线程池的了解。通过了解应用的需求，组合最大线程数和平均响应时间，可以得出一个合适的线程池配置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;转载自&lt;a href=&quot;http://www.infoq.com/cn/articles/the-importance-of-thread-pool-in-java-web-application&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http:/
    
    </summary>
    
      <category term="精选转载" scheme="http://zhenghe39.com/categories/%E7%B2%BE%E9%80%89%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="Java" scheme="http://zhenghe39.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>开源前端框架纵横谈</title>
    <link href="http://zhenghe39.com/2017/01/09/%E5%BC%80%E6%BA%90%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E7%BA%B5%E6%A8%AA%E8%B0%88/"/>
    <id>http://zhenghe39.com/2017/01/09/开源前端框架纵横谈/</id>
    <published>2017-01-09T01:21:29.000Z</published>
    <updated>2017-01-09T02:25:34.000Z</updated>
    
    <content type="html">&lt;p&gt;转载自&lt;a href=&quot;http://history.programmer.com.cn/15552/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://history.programmer.com.cn/15552/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近年来随着Web应用交互复杂度的提升，前端开发也迎来了一个高速发展的时期。除了一些老牌框架纷纷推出改动较大的升级之外，还涌现出一批新生代的开源库和框架，推动着Web应用开发理念向越来越强调前端架构的方向发展。当下的前端技术可以说是处在一个新旧交替的过程之中，同时存在着许多不同的观念和实践。&lt;/p&gt;
&lt;p&gt;本文试图对目前数量繁多的前端框架进行一些较笼统的分析和比较，抛砖引玉，希望能为大家在选择前端的技术架构时提供一些有益的参考。需要明确的是，本文探讨的前端架构是以JavaScript为主。有一些主要关注CSS层面的前端框架，如Bootstrap，不在本文的讨论范围之内。&lt;/p&gt;
&lt;p&gt;今天的JavaScript框架和库繁多复杂，很大程度上源于Web前端开发本身的特殊性。从当初的可有可无到今天各种功能完备的HTML5标 准，JavaScript在Web应用中的职责和定位经历了巨大的变化。加上长期以来各种浏览器对ECMA标准支持参差不齐的复杂环境，这导致大家对于 JavaScript能做什么、该做什么、应该怎么做一直无法形成共识。一个Web应用可以把所有业务逻辑全部放在服务器端，几乎不依赖 JavaScript；也可以完全用JavaScript构建客户端，服务器只负责数据接口；更有可能选择介于两者之间的折中方案。整体架构选择的多样性 使得不同的应用对于前端架构有着截然不同的需求。这意味着很难有一个前端库或框架可以满足所有人，也使得开发者在找不到完美方案的情况下选择重复造轮子。 同时，由于JavaScript是一门相当灵活的语言，不同背景的开发者借鉴了许多不同的软件设计思想来构建他们理想中的JavaScript框架，这也 导致不同的框架/库在解决同一个问题时经常有不同的方案，例如单页应用的设计模式问题。&lt;/p&gt;
&lt;h3 id=&quot;框架vs-库&quot;&gt;&lt;a href=&quot;#框架vs-库&quot; class=&quot;headerlink&quot; title=&quot;框架vs.库&quot;&gt;&lt;/a&gt;框架vs.库&lt;/h3&gt;&lt;p&gt;众所周知，在前端开发中对于库（Library）和框架（Framework）的区分向来是有些模糊的。像jQuery、YUI这些项目的官方描述都是 “库”，却经常在各种地方被人们称作“框架”。近两年出现的一些MVC项目号称框架，实际上却更像库。此外，在同样号称框架的各个项目之间所覆盖的功能也 都有所不同。传统软件工程对于库和框架的区分主要着眼于对应用运行流程的控制权。框架提供架构，控制运行流程，让开发者在合适的地方书写针对具体问题的代 码；而库则附属于架构，不控制运行流程，只提供可调用的函数。但由于上述Web前端开发的特殊性，这样的定义显得有些过于严格：真正称得上框架的项目很 少，却又经常需要和作为库的项目进行比较。因此，在比较JavaScript开源项目时，是框架还是库并不特别重要，首先应该分析该项目覆盖了前端开发中 的哪些问题（下文为了论述方便，一律用框架指代各类JavaScript开源项目）。&lt;/p&gt;
&lt;h3 id=&quot;前端开发可能面对的需求&quot;&gt;&lt;a href=&quot;#前端开发可能面对的需求&quot; class=&quot;headerlink&quot; title=&quot;前端开发可能面对的需求&quot;&gt;&lt;/a&gt;前端开发可能面对的需求&lt;/h3&gt;&lt;p&gt;前端开发中最常见的问题大致可以分为：封装原生API和常用任务、基础架构、富应用架构、视觉交互，以及工具链。下面我们逐个分析。&lt;/p&gt;
&lt;h4 id=&quot;封装原生API和常用任务&quot;&gt;&lt;a href=&quot;#封装原生API和常用任务&quot; class=&quot;headerlink&quot; title=&quot;封装原生API和常用任务&quot;&gt;&lt;/a&gt;封装原生API和常用任务&lt;/h4&gt;&lt;p&gt;JavaScript的原生API存在以下问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象、方法名烦琐。&lt;/li&gt;
&lt;li&gt;缺少一些常用任务的语法糖。&lt;/li&gt;
&lt;li&gt;旧浏览器兼容性不佳。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此早期的一些框架最主要的目标就是把烦琐的原生API和常用的任务封装成更简洁直观的API，同时，在封装过程中也处理了兼容性问题。jQuery就是解 决这一部分问题的典型方案。HTML5和ECMAScript 5标准的出台使得这些问题有所好转。随着新标准的普及，将来对于这一部分功能的需求会逐渐减弱。通常来说，封装的对象包含以下类别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOM的选择和操作：经典的例子如jQuery的链式API。&lt;/li&gt;
&lt;li&gt;DOM事件处理：一个重点是简化事件的delegation，即利用事件冒泡机制在父元素上用一个侦听函数侦听触发在多个子元素上的事件。&lt;/li&gt;
&lt;li&gt;Ajax：简化烦琐的XMLHttpRequest API，并且加强其语义性。&lt;/li&gt;
&lt;li&gt;语言增强：主要提供一些对数组和对象进行操作的便利函数。jQuery包含一些，但更典型的有Underscore和Lodash。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;基础架构&quot;&gt;&lt;a href=&quot;#基础架构&quot; class=&quot;headerlink&quot; title=&quot;基础架构&quot;&gt;&lt;/a&gt;基础架构&lt;/h4&gt;&lt;p&gt;这一部分通常是各类框架中比较底层的功能，决定了采用此框架的代码是如何被组织到一起的。目标是提高代码的可维护性、可协作性和可测试性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模块管理：&lt;/strong&gt;对大型的JavaScript项目来说，模块化开发是必需的。有些框架只提供基本的模块注册机制以防止全局变量污染和冲突，而另一些则提供包括 模块依赖解析、文件加载、压缩打包的功能。目前JavaScript模块管理有两个互相竞争的标准，一个是AMD（Asynchronous Module Definition），采用的框架有Dojo，单独的模块管理库有RequireJS；另一个是CommonJS的模块标准，采用者有模块管理库 SeaJS，以及基于SeaJS的开放型框架Arale。面向对象：JavaScript有原型继承，并且可以非常灵活地进行动态混入，但很多大型项目还是需要一个统一的面向对象的继承/扩展系统。对 此，John Resig、Douglas Crockford、Nicholas Zakas等各路JavaScript大神都曾经进行研究并给出过各自的解决方案，许多框架中也包含类似的解决方案。对此感兴趣的同学推荐阅读Arale 文档中的这篇文章：&lt;a href=&quot;http://aralejs.org/class/docs/competitors.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aralejs.org/class/docs/competitors.html &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自定义事件系统：&lt;/strong&gt;为了提高模块的可复用性、整个系统的容错性和灵活性，各个模块之间需要尽量解耦，使得相互之间尽可能减少依赖。要实现这样的解耦，一个自定义的事件机制 (通常借鉴Pub-Sub、Observer、Mediator等设计模式) 是很好的手段。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;组件系统：&lt;/strong&gt;定义如何使用和书写组件、组件之间如何相互调用和通信等。&lt;/p&gt;
&lt;h4 id=&quot;富应用架构&quot;&gt;&lt;a href=&quot;#富应用架构&quot; class=&quot;headerlink&quot; title=&quot;富应用架构&quot;&gt;&lt;/a&gt;富应用架构&lt;/h4&gt;&lt;p&gt;这一部分的主要目的是利用设计模式进一步提高代码复用，使得开发者的精力可以主要集中在实现应用本身的功能上&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码逻辑分层：&lt;/strong&gt;把对视觉界面、交互逻辑和数据的处理清晰地分开。就这一点而言，大部分框架借鉴了经典的MVC模式，但传统的MVC在前端并不适合直接套 用，因此各个框架对此的处理都略有不同，有些采用了MVP（Model-View-Presenter）或是MVVM（Model-View- ViewModel）模式。著名前端布道师Addy Osmani有详细的分析，本文受篇幅所限不再赘述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据绑定：&lt;/strong&gt;把界面和数据模型进行绑定，使得一方变化的时候另一方也会自动变化，可以省去手动更新DOM的操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据与服务器端的同步：&lt;/strong&gt;服务器端提供符合REST规范的API，前端的数据模型可以封装同步操作，可以省去手动发送Ajax请求的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模板渲染：&lt;/strong&gt;在前端存储和渲染可复用的HTML模版，这样更新界面时不需要再向服务器发送额外的请求。&lt;/p&gt;
&lt;p&gt;URL路径、应用状态和历史管理：无论是从搜索引擎还是用户体验的角度来看，大型单页应用都应该提供和应用的状态相对应的URL，同时不破坏后退键的功能。&lt;/p&gt;
&lt;h4 id=&quot;视觉交互&quot;&gt;&lt;a href=&quot;#视觉交互&quot; class=&quot;headerlink&quot; title=&quot;视觉交互&quot;&gt;&lt;/a&gt;视觉交互&lt;/h4&gt;&lt;p&gt;传统型大框架会包含这部分内容，通常是基于自身架构上的扩展，对框架自身有依赖性。但一些新框架则只专注于架构，对扩展部分彻底持开放态度，提倡让开发者自己选择最合适的工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果和动画：&lt;/strong&gt;用原生JavaScript实现动画是一个比较烦琐的过程，尤其是当需要精确的时间和缓动（easing）处理时。因此一些框架如jQuery提供一个API简洁的动画引擎，并封装了常见的动画效果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UI组件库：&lt;/strong&gt;这是传统型的大框架的主要卖点之一，大量现成的UI组件以及与框架本身的亲和性，可以大幅提高开发效率。YUI、Dojo是典型代表。在选择时，需要注意的一点是可定制性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据绘图：&lt;/strong&gt;这是一类比较特定的需求，但其实现的复杂程度也非常高。ExtJS封装了强大的数据图表功能，除此之外也有专门针对数据可视化的库如D3.js。&lt;/p&gt;
&lt;h4 id=&quot;工具链&quot;&gt;&lt;a href=&quot;#工具链&quot; class=&quot;headerlink&quot; title=&quot;工具链&quot;&gt;&lt;/a&gt;工具链&lt;/h4&gt;&lt;p&gt;随着前端项目越来越大，维护和上线的流程也越来越复杂。利用好各类工具实现自动化，可以大幅提高效率。随着Node.js社区的迅猛发展，各类基于JavaScript的命令行工具大量出现，这其中就有许多针对前端开发的优秀项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编译工具：&lt;/strong&gt;这里的编译严格来说是指js的组合和压缩。通常大型项目都会有多达几百KB的js文件，采用模块化开发的话，文件数量也会非常庞大，进行压缩打 包是必不可少的过程。大型框架如Closure Library、Dojo、YUI都自带编译工具。如果使用了模块管理库，例如RequireJS和SeaJS，也可以使用它们自带的打包工具。其他情况 下则可以自己写build script，也可以借助任务化的编译工具如Grunt.js或者Jake。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;包管理工具：&lt;/strong&gt;很久以来，前端开发者都需要自己下载、管理各类第三方库。前端的包管理机制的好处是可以更方便地管理第三库的版本和相互之间的依赖。目前国外 比较流行的单纯的前端包管理工具有Twitter的Bower，也有混合了包管理和编译于一体的Ender.js和Volo.js，更有集组件框架、包管理和编译于一体的Component。国内方面，SeaJS提供包管理+编译工具spm。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单元测试工具：&lt;/strong&gt;前端也需要单元测试。同样的，传统的大型框架也大多自带单元测试工具。单独的测试框架中比较流行而且简单易用的有QUnit、 Jasmine、Mocha等。此外，还有一些更复杂的前端测试框架，包含了在各类浏览器里的自动化测试，这又可以单独开出一个话题，限于篇幅不再深入， 感兴趣的朋友可以参考：&lt;a href=&quot;http://stackoverflow.com/questions/300855/looking-for-a-&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/300855/looking-for-a-&lt;/a&gt; better-javascript-unit-test-tool。&lt;/p&gt;
&lt;h3 id=&quot;框架的分类&quot;&gt;&lt;a href=&quot;#框架的分类&quot; class=&quot;headerlink&quot; title=&quot;框架的分类&quot;&gt;&lt;/a&gt;框架的分类&lt;/h3&gt;&lt;p&gt;以下根据风格对一些主流框架进行了粗略的分类，但分类并不是绝对的，只是为了简化比较的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;封装型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;典型如jQuery、MooTools，国内则有百度的Tangram。这一类框架通常只针对上述需求列表中的“封装原生API”这一块。虽然有插件机制，但通常不提供任何架构方面的帮助，因此现在更多的是和架构类的轻量框架搭配使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传统型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;典型如Dojo、YUI、Closure Library、ExtJS等，国内则有阿里的KISSY、网易的NEJ、腾讯的JX等。支付宝玉伯将这一类比喻为“大教堂风格”，一般有这些特点：稳 定，经受过实战的考验；覆盖的问题全面，试图在自身范围内解决尽可能多的问题；代码风格和质量一致，也经常会要求使用者遵循一定的风格规范；文档丰富详 细；更新稳重、缓慢；排他性，一旦选择很难替换；通常带有UI组件库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开放型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就国内外的典型例子来说，国外有由Node.js著名活跃开发者TJ Holowaychuck所牵头的Component（&lt;a href=&quot;https://github.com/component/component&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/component/component&lt;/a&gt;），国内则有阿里的Arale和豆瓣的Oz。&lt;/p&gt;
&lt;p&gt;开放型的框架专注于提供开放的基础架构，即代码组织方式和工具链。它们也提供一部分现成的模块，但使用者可以灵活地书写模块，或是博采众家之长，将第三方的库整合为模块来使用，又被称之为“集市风格”。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;灵活，可以适应不同类型的架构需求。&lt;/li&gt;
&lt;li&gt;用不同库解决不同问题，解耦性好。&lt;/li&gt;
&lt;li&gt;社区活跃，更新迅速。&lt;/li&gt;
&lt;li&gt;代码风格质量不一。&lt;/li&gt;
&lt;li&gt;选择和整合第三方库时需要很多精力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;单页应用型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代表性的如Backbone.js、Ember.js、AngularJS、Knockout.js等。单页应用的优势是服务器请求数少、UI反应快速、用户体验流畅。对于交互复杂的大型应用，尤其需要有一个为单页应用量身打造的前端架构来支撑。&lt;/p&gt;
&lt;p&gt;这一类框架在近两年大量涌现，如上文所说，存在着许多不同的观点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先是架构采用什么模式：是MVC（Ember.js、AngularJS）、MVP（Backbone.js）还是MVVM（Knockout.js）？&lt;/li&gt;
&lt;li&gt;其次是侵入性：侵入性较强的提供更多的架构支持，但学习曲线也更陡峭一些（Ember.js、AngularJS）；侵入性较弱的则上手更快，和其他框架/库更容易兼容（Backbone.js、Knockout.js）。&lt;/li&gt;
&lt;li&gt;最后是View的处理：是由JavaScript来把基于String的模板渲染成DOM（Ember.js、Backbone.js），还是由JavaScript为已有的DOM添加行为（AngularJS、Knockout.js）？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;值得一提的是，一些老牌的传统型框架如Dojo、YUI、ExtJS都开始引入了MVC单页应用架构。但Dojo和YUI的这部分功能仍处在比较粗糙的阶段，只有ExtJS进行了整体重大升级，相对成熟一些。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Twitter在2月初刚开源了它的前端框架Flight。这是一个介于单页应用型和开放型之间的框架。其核心是事件驱动的、基于DOM的组件机制。它强调组件之间相对独立松散的架构，但对组件的写法定义十分严格，具有一定的侵入性和排他性。&lt;/p&gt;
&lt;h3 id=&quot;选择框架时应该考虑什么&quot;&gt;&lt;a href=&quot;#选择框架时应该考虑什么&quot; class=&quot;headerlink&quot; title=&quot;选择框架时应该考虑什么&quot;&gt;&lt;/a&gt;选择框架时应该考虑什么&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;项目规模：&lt;/strong&gt;小项目需要快速迭代，需要灵活性较高、兼容性比较好的架构。而大项目则需要关注成熟度、风格规范、可协作性、可维护性和可测试性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;团队的现有资源：&lt;/strong&gt;团队是否对后台技术选择和架构有一定的偏好？是否已经对某些框架/工具有实战的经验？如果选择一个开放式的框架，是否有足够的精力来整合各类第三方工具？最后，选择一个团队不熟悉的框架，需要衡量带来的好处是否能抵消掉学习成本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;产品对用户体验的需求：&lt;/strong&gt;产品本身更适合做成单页应用还是传统Web应用？产品是需要大量现成的UI组件，还是需要注重每一个细节？&lt;/p&gt;
&lt;p&gt;建议在选择框架时，首先对自己的项目和团队进行定位，然后总结出具体的技术需求列表，最后参照上文列举的各项细节来寻找适合的框架和周边工具。当然，本文无法穷举所有的细节，只能提供大致的选择方向。确定几个潜在选择之后，还需要开发者自己进行深入的研究和试用。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;前端技术正处在一个新老并存、百家争鸣的时代。一方面我们需要等待HTML5以及其他W3C标准的普及，另一方面更新的标准，如Web Components和ECMAScript 6又已在起草之中。这两个标准普及时，前端架构恐怕又会迎来一次洗牌。但不管怎样，做好足够的功课，然后根据自己的实际需求出发来进行选择总是没错的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;转载自&lt;a href=&quot;http://history.programmer.com.cn/15552/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://history.programmer.com.cn/15552/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近年
    
    </summary>
    
      <category term="精选转载" scheme="http://zhenghe39.com/categories/%E7%B2%BE%E9%80%89%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="Javascript" scheme="http://zhenghe39.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>构建Maven web项目并导入Eclipse</title>
    <link href="http://zhenghe39.com/2016/12/04/%E6%9E%84%E5%BB%BAMaven-web%E9%A1%B9%E7%9B%AE%E5%B9%B6%E5%AF%BC%E5%85%A5Eclipse/"/>
    <id>http://zhenghe39.com/2016/12/04/构建Maven-web项目并导入Eclipse/</id>
    <published>2016-12-04T13:19:58.000Z</published>
    <updated>2016-12-04T14:34:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;使用Maven-Archetype插件&quot;&gt;&lt;a href=&quot;#使用Maven-Archetype插件&quot; class=&quot;headerlink&quot; title=&quot;使用Maven Archetype插件&quot;&gt;&lt;/a&gt;使用Maven Archetype插件&lt;/h3&gt;&lt;p&gt;直接使用&lt;a href=&quot;http://maven.apache.org/archetype/maven-archetype-plugin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Maven Archetype Plugin&lt;/a&gt;进行web项目骨架的生成&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mvn archetype:generate -DgroupId=com.samuerio.mavenweb -DartifactId=mavenweb-test -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Eclipse导入时选&lt;code&gt;Existing Maven Projects&lt;/code&gt;即可，Eclipse就能将其识别为Maven Web项目。最后调整项目的&lt;code&gt;Build Path&lt;/code&gt;,由默认的&lt;code&gt;mavenweb-test/target/classes&lt;/code&gt;调整为&lt;code&gt;mavenweb-test/src/main/webapp/WEB-INF/classes&lt;/code&gt;就大工完成了。&lt;/p&gt;
&lt;h3 id=&quot;手动构建Maven-Web项目&quot;&gt;&lt;a href=&quot;#手动构建Maven-Web项目&quot; class=&quot;headerlink&quot; title=&quot;手动构建Maven Web项目&quot;&gt;&lt;/a&gt;手动构建Maven Web项目&lt;/h3&gt;&lt;p&gt;创建项目文件夹，并添加&lt;code&gt;pom.xml&lt;/code&gt;文件&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNc79gw1faf3en27w0j30q2032dha.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.samuerio.mavenweb&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;manual-mavenweb-test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;war&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;manual-mavenweb-test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;http://maven.apache.org&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.8.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;finalName&lt;/span&gt;&amp;gt;&lt;/span&gt;manual-mavenweb-test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;finalName&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建Maven Web的&lt;code&gt;src/main/java&lt;/code&gt; 、&lt;code&gt;src/main/resources&lt;/code&gt;、&lt;code&gt;src/test/java&lt;/code&gt;、&lt;code&gt;src/test/resources&lt;/code&gt;、&lt;code&gt;src/main/webapp&lt;/code&gt;等目录&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNc79gw1faf3tosgnjj30h60ae3zj.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导入Eclipse&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eclipse导入时选&lt;code&gt;Existing Maven Projects&lt;/code&gt;。以这种方式构建的Maven Web项目导入时Eclipse不会自动将其识别为Web项目，需要改其Eclipse的配置文件，好让IDE识别。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.编辑.project文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找到&lt;code&gt;&amp;lt;natures&amp;gt;&amp;lt;/natures&amp;gt;&lt;/code&gt;添加上,并刷新项目&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;nature&lt;/span&gt;&amp;gt;&lt;/span&gt;org.eclipse.wst.common.project.facet.core.nature&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;nature&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;nature&lt;/span&gt;&amp;gt;&lt;/span&gt;org.eclipse.wst.common.modulecore.ModuleCoreNature&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;nature&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2.编辑项目的Project Facets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开项目&lt;code&gt;properties&lt;/code&gt;，找到Project Facets,并勾选上右侧的Dynamic Web Module和Java&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNc79gw1faf4f3hslzj317u0oyqdo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;并点击底部的&lt;code&gt;Further configuration available...&lt;/code&gt;进行WebContent变量的配置(默认的为WebRoot将其调整为webapp路径即可)&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNc79gw1faf4o0eaqwj30t20iygnq.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;最后同上面一样进行&lt;code&gt;Build Path&lt;/code&gt;调整即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用Maven-Archetype插件&quot;&gt;&lt;a href=&quot;#使用Maven-Archetype插件&quot; class=&quot;headerlink&quot; title=&quot;使用Maven Archetype插件&quot;&gt;&lt;/a&gt;使用Maven Archetype插件&lt;/h3&gt;&lt;p&gt;直接
    
    </summary>
    
      <category term="编程札记" scheme="http://zhenghe39.com/categories/%E7%BC%96%E7%A8%8B%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="Maven" scheme="http://zhenghe39.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>OOP编程的五大原则</title>
    <link href="http://zhenghe39.com/2016/11/20/OOP%E7%BC%96%E7%A8%8B%E7%9A%84%E4%BA%94%E5%A4%A7%E5%8E%9F%E5%88%99/"/>
    <id>http://zhenghe39.com/2016/11/20/OOP编程的五大原则/</id>
    <published>2016-11-20T07:07:19.000Z</published>
    <updated>2016-12-04T13:04:11.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;SRP&quot;&gt;&lt;a href=&quot;#SRP&quot; class=&quot;headerlink&quot; title=&quot;SRP&quot;&gt;&lt;/a&gt;SRP&lt;/h3&gt;&lt;p&gt;SRP(Single Responsibility Principle):单一职责原则&lt;/p&gt;
&lt;h3 id=&quot;LSP&quot;&gt;&lt;a href=&quot;#LSP&quot; class=&quot;headerlink&quot; title=&quot;LSP&quot;&gt;&lt;/a&gt;LSP&lt;/h3&gt;&lt;p&gt;LSP(Liskov Substitution):里氏替换原则&lt;/p&gt;
&lt;p&gt;Java运行时多态(继承、接口)特性，可以将设计中的静态结构改为动态结构，维持设计的封闭性。“多态”由继承语义实现，那我们如何去度量继承关系的质量呢？，这时候就需要「里氏替换原则」了.&lt;/p&gt;
&lt;p&gt;里氏替换原则：继承必须确保超类所拥有的行为在子类中仍然成立。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;举个栗子&lt;/strong&gt;：类“鸟”中有个方法fly，企鹅自然也继承了这个方法，可是企鹅不能飞阿，于是，我们在企鹅的类中覆盖了fly方法，告诉方法的调用者：企鹅是不会飞的。这完全符合常理。但是，这违反了LSP，企鹅是鸟的子类，可是企鹅却不能飞！需要注意的是，此处的“鸟”已经不再是生物学中的鸟了，它是软件中的一个类、一个抽象。 &lt;/p&gt;
&lt;h3 id=&quot;OCP&quot;&gt;&lt;a href=&quot;#OCP&quot; class=&quot;headerlink&quot; title=&quot;OCP&quot;&gt;&lt;/a&gt;OCP&lt;/h3&gt;&lt;p&gt;OCP(Closed for Modification;Open for Extension):开闭原则&lt;br&gt;&lt;strong&gt;为什么需要OCP呢？&lt;/strong&gt;&lt;br&gt;  你给系统封装了访问MySql数据库的类，使得系统支持MySql。某一天，需求增加了，要对SQL Server数据库进行支持，你可能觉得这很简单，类里加个Type参数，if-else区别处理就好。但是需求继续膨胀，SQLite、Oracle…都要支持，继续else-if,else-if，加着加着你突然发现原来运行正常的MySql出现了异常，debug发现原来耦合太多，改着改着把既有的改错了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何OCP呢？&lt;/strong&gt;&lt;br&gt;  你抽离出数据库访问的接口类IDatabase，使得系统对数据的访问依赖接口而不是具体的实现类，让MySql数据库访问类实现IDatabase，间接使得系统支持了MySql。后面如果需要支持其他数据库，只要单独创建一个新类实现IDatabase接口即可，对既有的Mysql访问实现类不需要做任何改动(Closed for Modification).&lt;/p&gt;
&lt;h3 id=&quot;DIP&quot;&gt;&lt;a href=&quot;#DIP&quot; class=&quot;headerlink&quot; title=&quot;DIP&quot;&gt;&lt;/a&gt;DIP&lt;/h3&gt;&lt;p&gt;DIP(Dependence Inversion Principle):依赖倒置&lt;br&gt;原则：要依赖于抽象，不要依赖于具体&lt;/p&gt;
&lt;h3 id=&quot;ISP&quot;&gt;&lt;a href=&quot;#ISP&quot; class=&quot;headerlink&quot; title=&quot;ISP&quot;&gt;&lt;/a&gt;ISP&lt;/h3&gt;&lt;p&gt;ISP:接口隔离原则&lt;br&gt;原则：使用多个专门的接口比使用单一的总接口要好。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;SRP&quot;&gt;&lt;a href=&quot;#SRP&quot; class=&quot;headerlink&quot; title=&quot;SRP&quot;&gt;&lt;/a&gt;SRP&lt;/h3&gt;&lt;p&gt;SRP(Single Responsibility Principle):单一职责原则&lt;/p&gt;
&lt;h3 id=&quot;LSP&quot;&gt;&lt;a hr
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="OOP" scheme="http://zhenghe39.com/tags/OOP/"/>
    
  </entry>
  
  <entry>
    <title>MvvM的认识</title>
    <link href="http://zhenghe39.com/2016/11/20/MvvM%E7%9A%84%E8%AE%A4%E8%AF%86/"/>
    <id>http://zhenghe39.com/2016/11/20/MvvM的认识/</id>
    <published>2016-11-20T06:57:14.000Z</published>
    <updated>2016-11-20T07:01:49.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/65e4f1e6gw1f9ykyv3ucnj20fg0brwen.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Model&lt;/code&gt;：业务逻辑相关的数据对象，通常从数据库映射而来，可以说是与数据库对应的model。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;View&lt;/code&gt;：展现出来的用户界面。&lt;/p&gt;
&lt;p&gt;基本上，绝大多数软件所做的工作无非就是从数据存储中读出数据，展现到用户界面上，然后从用户界面接收输入，写入到数据存储里面去。所以，对于数据存储（model）和界面（view）这两层，大家基本没什么异议。&lt;/p&gt;
&lt;p&gt;但是，如何把model展现到view上，以及如何把数据从view写入到model里，不同的人有不同的意见:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MVC派的看法是，界面上的每个变化都是一个事件，我只需要针对每个事件写一堆代码，来把用户的输入转换成model里的对象就行了，这堆代码可以叫controller。&lt;/li&gt;
&lt;li&gt;MVVM派的看法是，我给view里面的各种控件也定义一个对应的数据对象，这样，只要修改这个数据对象，view里面显示的内容就自动跟着刷新，而在view 里做了任何操作，这个数据对象也跟着自动更新，这样多美。所以：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ViewModel&lt;/code&gt;：就是与界面（view）对应的Model。因为，数据库结构往往是不能直接跟界面控件一一对应上的.所以，需要再定义一个数据对象专门对应view上的控件。而ViewModel的职责就是把model对象封装成可以显示和接受输入的界面数据对象。至于viewmodel的数据随着view自动刷新，并且同步到model里去，这部分代码可以写成公用的框架。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/65e4f1e6gw1f9ykyv3ucnj20fg0brwen.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Model&lt;/code&gt;：业务逻辑相关的数据对象，通常从数据库映射而来，可以说是
    
    </summary>
    
      <category term="编程札记" scheme="http://zhenghe39.com/categories/%E7%BC%96%E7%A8%8B%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="MvvM" scheme="http://zhenghe39.com/tags/MvvM/"/>
    
  </entry>
  
  <entry>
    <title>EL表达式</title>
    <link href="http://zhenghe39.com/2016/11/20/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://zhenghe39.com/2016/11/20/EL表达式/</id>
    <published>2016-11-20T06:02:43.000Z</published>
    <updated>2016-11-20T06:15:21.000Z</updated>
    
    <content type="html">&lt;p&gt;由于Html页面中嵌入Java代码，是十分不利于开发者和美工分工的，为了尽量别在Jsp页面中使用Java代码,&lt;br&gt;为此El表达式出来了。&lt;/p&gt;
&lt;p&gt;语法：&lt;code&gt;${变量或表达式}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于输出域中数据{若没有指定域对象，EL表达式就会依次在page-&amp;gt;request-&amp;gt;session-&amp;gt;application域里找那个名字的变量}/${域范围.name}&lt;/li&gt;
&lt;li&gt;输出对象里的属性&lt;/li&gt;
&lt;li&gt;输出集合对象的值${personList[0]}/${personMap[“ppp”]}&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用于计算表达式:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#31639;&amp;#26415;&amp;#65306;$&amp;#123;12+13-12*5+100&amp;#125;&amp;#10;&amp;#27604;&amp;#36739;&amp;#65306;$&amp;#123;5&amp;#60;3&amp;#125;&amp;#10;&amp;#36923;&amp;#36753;&amp;#65306;$&amp;#123;5&amp;#60;6&amp;#38;&amp;#38;7&amp;#62;8&amp;#125;&amp;#10;&amp;#21028;&amp;#31354; &amp;#21028;&amp;#26029;&amp;#26159;&amp;#21542;null$&amp;#123;name==null &amp;#125;&amp;#10;&amp;#21028;&amp;#26029;&amp;#26159;&amp;#21542;&amp;#26159;&amp;#31354;&amp;#23383;&amp;#31526;&amp;#20018;$&amp;#123;name==&amp;#34;&amp;#34;&amp;#125;&amp;#10;&amp;#36824;&amp;#26377;&amp;#19968;&amp;#31181;empty&amp;#20851;&amp;#38190;&amp;#23383;&amp;#21487;&amp;#20197;&amp;#29992;&amp;#26469;&amp;#21028;&amp;#26029;&amp;#31354;&amp;#21644;null&amp;#65292;&amp;#29992;&amp;#27861;&amp;#65306;$&amp;#123;empty name &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EL表达式内置对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pageContext   –等价于jsp的pageContext内置对象&lt;/li&gt;
&lt;li&gt;pageScope      –指定域获取&lt;/li&gt;
&lt;li&gt;requestScope&lt;/li&gt;
&lt;li&gt;sessionScope&lt;/li&gt;
&lt;li&gt;applicationScope&lt;/li&gt;
&lt;li&gt;param       –请求参数&lt;/li&gt;
&lt;li&gt;paramValues&lt;/li&gt;
&lt;li&gt;header       –请求头&lt;/li&gt;
&lt;li&gt;headerValues&lt;/li&gt;
&lt;li&gt;cookie       –获取cookie&lt;/li&gt;
&lt;li&gt;initParm     –获取web应用全局参数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;show code&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%=pageContext.getRequest() %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--EL获取web上下文 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          $&amp;#123;pageContext.request.contextPath &amp;#125; &amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          $&amp;#123;pageContext.request.remoteHost &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;a href=&quot;$&amp;#123;pageContext.request.contextPath &amp;#125;/04.el1.jsp&quot;&amp;gt;页面&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;hr/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%-- param / paramValues --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--jsp接收参数 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              String name = request.getParameter(&quot;name&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              //out.write(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              String[] names = request.getParameterValues(&quot;name&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              for(String n:names)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  out.write(n+&quot;&amp;lt;br/&amp;gt;&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--EL获取参数 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          EL: $&amp;#123;param[&quot;name&quot;]&amp;#125;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          EL: $&amp;#123;paramValues[&quot;name&quot;][0] &amp;#125; - $&amp;#123;paramValues[&quot;name&quot;][1] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;hr/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--请求有： header / headerValues --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--jsp获取头 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%=request.getHeader(&quot;user-agent&quot;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%=request.getHeaders(&quot;user-agent&quot;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--EL获取请求头 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          EL: $&amp;#123;header[&quot;user-agent&quot;] &amp;#125;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          EL: $&amp;#123;headerValues[&quot;user-agent&quot;][0] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;hr/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--cookie:  --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--jsp获取cookie --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%=request.getCookies() %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--EL获取 Cookie--%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          $&amp;#123;cookie[&quot;JSESSIONID&quot;].name &amp;#125; - $&amp;#123;cookie[&quot;JSESSIONID&quot;].value &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;hr/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;%--EL获取全局参数--%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          $&amp;#123;initParam[&quot;AAA&quot;] &amp;#125; - $&amp;#123;initParam[&quot;BBB&quot;] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上就是EL的内容，重点在引用属性时会调用它的&lt;code&gt;getXxxx&lt;/code&gt;方法
　　　　　　&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于Html页面中嵌入Java代码，是十分不利于开发者和美工分工的，为了尽量别在Jsp页面中使用Java代码,&lt;br&gt;为此El表达式出来了。&lt;/p&gt;
&lt;p&gt;语法：&lt;code&gt;${变量或表达式}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于输出域中数据{
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Jsp" scheme="http://zhenghe39.com/tags/Jsp/"/>
    
  </entry>
  
  <entry>
    <title>JSP标签</title>
    <link href="http://zhenghe39.com/2016/11/20/JSP%E6%A0%87%E7%AD%BE/"/>
    <id>http://zhenghe39.com/2016/11/20/JSP标签/</id>
    <published>2016-11-20T04:45:46.000Z</published>
    <updated>2016-12-05T13:10:27.000Z</updated>
    
    <content type="html">&lt;p&gt;JSP标签能让你快捷地操作&lt;code&gt;域对象&lt;/code&gt;里面的变量，提供逻辑判断，遍历等。&lt;/p&gt;
&lt;h3 id=&quot;JSP内置标签&quot;&gt;&lt;a href=&quot;#JSP内置标签&quot; class=&quot;headerlink&quot; title=&quot;JSP内置标签&quot;&gt;&lt;/a&gt;JSP内置标签&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;静态包含：&lt;code&gt;@include&lt;/code&gt;指令实现。原理是先合并再进行翻译，要避免变量重名。&lt;/li&gt;
&lt;li&gt;动态包含：&lt;code&gt;&amp;lt;jsp:include page=&amp;quot;&amp;quot; /&amp;gt;&lt;/code&gt;使用内置标签。原理是先翻译再合并。动态包含可以使用&lt;code&gt;&amp;lt;jsp:param/&amp;gt;&lt;/code&gt;标签携带参数到被包含页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;JSTL标签库&quot;&gt;&lt;a href=&quot;#JSTL标签库&quot; class=&quot;headerlink&quot; title=&quot;JSTL标签库&quot;&gt;&lt;/a&gt;JSTL标签库&lt;/h3&gt;&lt;p&gt;JSTL即Java Standard Tag Library，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心标签库（c： 设置变量，获取变量，条件判断，循环  ）（主要）&lt;/li&gt;
&lt;li&gt;EL函数库  （ fn：对String常用的方法 ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;核心库中常用的几种标签&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:set&amp;gt;&amp;lt;/c:set&amp;gt;&lt;/code&gt;      – 设置数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:out value=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&lt;/code&gt;   –得到数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:if test=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/c:if&amp;gt;&lt;/code&gt;      –单条件判断&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:choose&amp;gt;&amp;lt;/c:choose&amp;gt;&lt;/code&gt;    –多条件判断&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:when test=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/c:when&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:otherwise&amp;gt;&amp;lt;/c:otherwise&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:forEach&amp;gt;&amp;lt;/c:forEach&amp;gt;&lt;/code&gt;      –循环，遍历集合或数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:forTokens items=&amp;quot;&amp;quot; delims=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/c:forTokens&amp;gt;&lt;/code&gt;  -循环字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;c:redirect&amp;gt;&amp;lt;/c:redirect&amp;gt;&lt;/code&gt;    –重定向&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;引入核心库&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight jsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ taglib uri=&lt;span class=&quot;string&quot;&gt;&quot;http://java.sun.com/jsp/jstl/core&quot;&lt;/span&gt; prefix=&lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用案例&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--使用set标签设置数据，默认是在pageContext域中设置,也可以指定域保存 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:set var=&quot;name&quot; value=&quot;eric&quot; scope=&quot;request&quot;&amp;gt;&amp;lt;/c:set&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $&amp;#123;requestScope.name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%-- out标签，从域对象中得到数据,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default属性:设置默认值，当属性为null时，就会用默认值代替&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        escapeXml:是否对内容进行转义，false:不进行转义，true：进行转义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        什么是转义：特殊字符不会被识别作用，当普通字符输出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:out value=&quot;$&amp;#123;name&amp;#125;&quot; default=&quot;abc&quot; escapeXml=&quot;false&quot;&amp;gt;&amp;lt;/c:out&amp;gt;m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--if标签：单条间判断--%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:if test=&quot;$&amp;#123;1&amp;gt;2&amp;#125;&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            条件成立执行的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/c:if&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--choose标签:多条件判断 --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:set var=&quot;id&quot; value=&quot;001&quot;&amp;gt;&amp;lt;/c:set&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:choose&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;c:when test=&quot;$&amp;#123;id=002&amp;#125;&quot;&amp;gt;此用户是002&amp;lt;/c:when&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;c:when test=&quot;$&amp;#123;id=001&amp;#125;&quot;&amp;gt;此用户是001&amp;lt;/c:when&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;c:otherwise&amp;gt;不存在此用户&amp;lt;/c:otherwise&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/c:choose&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--遍历List&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        begin:从哪个元素开始遍历，第一个下标为0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        end:到哪个元素结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        step:步长&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        items：需要遍历的对象的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var：每个元素对象的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        varStatus：当前遍历对象的状态，即：已经遍历了几个元素。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:forEach items=&quot;$&amp;#123;list&amp;#125;&quot; var=&quot;student&quot; varStatus=&quot;varSta&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        序号$&amp;#123;varSta.count&amp;#125;-姓名$&amp;#123;student.name&amp;#125;-年龄$&amp;#123;student.age&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/c:forEach&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--遍历Map--%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:forEach items=&quot;$&amp;#123;map&amp;#125;&quot; var=&quot;entry&quot; varStatus=&quot;varSta&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    序号$&amp;#123;varSta.count&amp;#125;-编号$&amp;#123;entry.key&amp;#125;-姓名$&amp;#123;entry.value.name&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/c:forEach&amp;gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--forTokens便签 ：循环字符串，可以切割后将子串都输出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     items:要循环的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     delims：以什么东西切割字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var：切割后的单个对象的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:forTokens items=&quot;$&amp;#123;str&amp;#125;&quot; delims=&quot;-&quot; var=&quot;s&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $&amp;#123;s&amp;#125; &amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/c:forTokens&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;%--重定向 标签--%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;c:redirect url=&quot;http://www.baidu.com&quot;&amp;gt;&amp;lt;/c:redirect&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实际使用例子&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:choose&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:when&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;empty versionFormTemplateList&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;info&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;暂时无版本记录&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:when&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:otherwise&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:forEach&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;items&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;versionFormTemplateList&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;versionFormTemplate&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;varStatus&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;index&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:choose&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:when&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;versionFormTemplate.unid == activeVersionFormTemplateUnid &amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;active&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;versionFormTemplate.formattimestr&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;delBtn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;删除&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:when&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:otherwise&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;version&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-versionid&lt;/span&gt; = &quot;$&amp;#123;&lt;span class=&quot;attribute&quot;&gt;versionFormTemplate.unid&lt;/span&gt;&amp;#125;&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;versionFormTemplate.formattimestr&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;delBtn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;删除&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:otherwise&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:choose&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:forEach&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:otherwise&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:choose&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:set&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;fn&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= request.getParameter(\&quot;&lt;/span&gt;&lt;span class=&quot;value&quot;&gt;fn\&quot;)&lt;/span&gt; %&amp;gt;&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:set&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:if&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;fn==&#39;import&#39;&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:set&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;formTemplateUnid&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= request.getParameter(\&quot;&lt;/span&gt;&lt;span class=&quot;value&quot;&gt;formTemplateUnid\&quot;)&lt;/span&gt; %&amp;gt;&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:set&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:if&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;fn==&#39;update&#39;&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;c:set&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;versionFormTemplateUnid&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= request.getParameter(\&quot;&lt;/span&gt;&lt;span class=&quot;value&quot;&gt;versionFormTemplateUnid\&quot;)&lt;/span&gt; %&amp;gt;&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:set&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;c:if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;JSP标签能让你快捷地操作&lt;code&gt;域对象&lt;/code&gt;里面的变量，提供逻辑判断，遍历等。&lt;/p&gt;
&lt;h3 id=&quot;JSP内置标签&quot;&gt;&lt;a href=&quot;#JSP内置标签&quot; class=&quot;headerlink&quot; title=&quot;JSP内置标签&quot;&gt;&lt;/a&gt;JSP内置标签&lt;/h3
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Jsp" scheme="http://zhenghe39.com/tags/Jsp/"/>
    
  </entry>
  
  <entry>
    <title>json-lib的用法</title>
    <link href="http://zhenghe39.com/2016/11/16/json-lib%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://zhenghe39.com/2016/11/16/json-lib的用法/</id>
    <published>2016-11-15T16:05:23.000Z</published>
    <updated>2016-11-15T16:14:41.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://json-lib.sourceforge.net/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方说明文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所需要的依赖包：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jakarta commons-lang 2.5&lt;/li&gt;
&lt;li&gt;jakarta commons-beanutils 1.8.0&lt;/li&gt;
&lt;li&gt;jakarta commons-collections 3.2.1&lt;/li&gt;
&lt;li&gt;jakarta commons-logging 1.1.1&lt;/li&gt;
&lt;li&gt;ezmorph 1.0.6&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;普通用法&quot;&gt;&lt;a href=&quot;#普通用法&quot; class=&quot;headerlink&quot; title=&quot;普通用法&quot;&gt;&lt;/a&gt;普通用法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;JSONArray.fromObject(object)/JSONObject.fromObject(object)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;object&lt;/code&gt;的来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般数组(boolean[]等)&lt;/li&gt;
&lt;li&gt;列表(List)&lt;/li&gt;
&lt;li&gt;Bean对象(JavaBean对象)&lt;/li&gt;
&lt;li&gt;JSON字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;读取-json文件&quot;&gt;&lt;a href=&quot;#读取-json文件&quot; class=&quot;headerlink&quot; title=&quot;读取.json文件&quot;&gt;&lt;/a&gt;读取.json文件&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readJsonCfgFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String jsonStr = getStringFromFile(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.WEB_INF_PATH+File.separator+&lt;span class=&quot;string&quot;&gt;&quot;config&quot;&lt;/span&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			File.separator+&lt;span class=&quot;string&quot;&gt;&quot;mongod&quot;&lt;/span&gt;+File.separator+&lt;span class=&quot;string&quot;&gt;&quot;mongodb.json&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	JSONObject jsonObj = JSONObject.from(jsonStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getStringFromFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path,String encode)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	StringBuffer json = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuffer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FileInputStream fileInputStream = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		InputStreamReader isr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(fileInputStream, &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		BufferedReader bufferedReader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BufferedReader(isr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String line = bufferedReader.readLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(StringUtils.isEmpty(line))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			line = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		do&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			json.append(line);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			line = bufferedReader.readLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(line != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				json.append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(line != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; json.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JSONObject添加、删除、修改键值&quot;&gt;&lt;a href=&quot;#JSONObject添加、删除、修改键值&quot; class=&quot;headerlink&quot; title=&quot;JSONObject添加、删除、修改键值&quot;&gt;&lt;/a&gt;JSONObject添加、删除、修改键值&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jsonObject.remove(key)&amp;#10;jsonObject.put(key,value)&amp;#10;jsonObject.element(key,value)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JSONObject转Bean对象&quot;&gt;&lt;a href=&quot;#JSONObject转Bean对象&quot; class=&quot;headerlink&quot; title=&quot;JSONObject转Bean对象&quot;&gt;&lt;/a&gt;JSONObject转Bean对象&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FormField formField = (FormField) JSONObject.toBean(jsonObject, FormField.class);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://json-lib.sourceforge.net/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方说明文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所需要的依赖包：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;

    
    </summary>
    
      <category term="编程札记" scheme="http://zhenghe39.com/categories/%E7%BC%96%E7%A8%8B%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="http://zhenghe39.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs网络编程策略</title>
    <link href="http://zhenghe39.com/2016/11/15/Nodejs%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%AD%96%E7%95%A5/"/>
    <id>http://zhenghe39.com/2016/11/15/Nodejs网络编程策略/</id>
    <published>2016-11-15T15:59:26.000Z</published>
    <updated>2016-11-15T16:01:16.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;4种网络编程策略：&quot;&gt;&lt;a href=&quot;#4种网络编程策略：&quot; class=&quot;headerlink&quot; title=&quot;4种网络编程策略：&quot;&gt;&lt;/a&gt;4种网络编程策略：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;服务器为每个客户端请求分配一个线程/进程，使用阻塞式I/O。Apache就是这种策略，由于阻塞，这种策略很难实现高性能，但非常简单，可以实现复杂的交互逻辑。&lt;/li&gt;
&lt;li&gt;服务器用一个线程处理所有客户端请求，使用非阻塞I/O及事件机制。nodejs就是这种策略。这种策略简单，也能提供足够的性能，但无法充分利用多核CPU资源。&lt;/li&gt;
&lt;li&gt;服务器会分配多个线程来处理请求，但每个线程只处理其中一组客户端的请求，使用非阻塞的I/O及事件机制。这是对第二种策略的简单改进，在多线程并发上容易出现bug。&lt;/li&gt;
&lt;li&gt;服务器会分配多个线程来处理请求，但每个线程只处理其中一组客户端的请求，使用异步I/O。这种策略在支持异步I/O的操作系统上性能非常高，但实现起来很难，主要用在windows平台上。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;4种网络编程策略：&quot;&gt;&lt;a href=&quot;#4种网络编程策略：&quot; class=&quot;headerlink&quot; title=&quot;4种网络编程策略：&quot;&gt;&lt;/a&gt;4种网络编程策略：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;服务器为每个客户端请求分配一个线程/进程，使用阻塞式I/O。Apache
    
    </summary>
    
      <category term="编程札记" scheme="http://zhenghe39.com/categories/%E7%BC%96%E7%A8%8B%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="Node" scheme="http://zhenghe39.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Myeclipse的配置恢复</title>
    <link href="http://zhenghe39.com/2016/11/15/Myeclipse%E7%9A%84%E9%85%8D%E7%BD%AE%E6%81%A2%E5%A4%8D/"/>
    <id>http://zhenghe39.com/2016/11/15/Myeclipse的配置恢复/</id>
    <published>2016-11-15T05:03:40.000Z</published>
    <updated>2016-11-20T06:53:14.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-配置Maven路径&quot;&gt;&lt;a href=&quot;#1-配置Maven路径&quot; class=&quot;headerlink&quot; title=&quot;1.配置Maven路径&quot;&gt;&lt;/a&gt;1.配置Maven路径&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/8b826b79gw1f9spndd6hhj21fi0k4wij.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-配置Tomcat路径-amp-amp-编码格式&quot;&gt;&lt;a href=&quot;#2-配置Tomcat路径-amp-amp-编码格式&quot; class=&quot;headerlink&quot; title=&quot;2.配置Tomcat路径 &amp;amp;&amp;amp; 编码格式&quot;&gt;&lt;/a&gt;2.配置Tomcat路径 &amp;amp;&amp;amp; 编码格式&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/65e4f1e6gw1f9yjz7ivsmj21540nm439.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/65e4f1e6gw1f9yjzll509j215s0fqdi9.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/65e4f1e6gw1f9yk02ibhnj217a0vun49.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/65e4f1e6gw1f9yk0cwugij21kw0nktg1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-设置theme风格，编辑器字体、控制台字体&quot;&gt;&lt;a href=&quot;#3-设置theme风格，编辑器字体、控制台字体&quot; class=&quot;headerlink&quot; title=&quot;3.设置theme风格，编辑器字体、控制台字体&quot;&gt;&lt;/a&gt;3.设置theme风格，编辑器字体、控制台字体&lt;/h3&gt;&lt;p&gt;字体：&lt;br&gt;    全局Text-font为 Manoco 16&lt;br&gt;    控制台为 Manoco 12&lt;/p&gt;
&lt;h3 id=&quot;4-设置用户使用习惯：快捷键等-content-Assist调整、toggle-comment调整&quot;&gt;&lt;a href=&quot;#4-设置用户使用习惯：快捷键等-content-Assist调整、toggle-comment调整&quot; class=&quot;headerlink&quot; title=&quot;4.设置用户使用习惯：快捷键等{content Assist调整、toggle comment调整}&quot;&gt;&lt;/a&gt;4.设置用户使用习惯：快捷键等{content Assist调整、toggle comment调整}&lt;/h3&gt;&lt;p&gt;关闭「自动补全代码」功能 &amp;amp;&amp;amp; 设置Content Assist 快捷键为&lt;code&gt;CMD+/&lt;/code&gt; &amp;amp;&amp;amp; 设置toggle Comment快捷键为&lt;code&gt;option+/&lt;/code&gt;。&lt;br&gt;Note：别忘了设置&lt;code&gt;Add Block Comment&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/65e4f1e6gw1f9yk5fd4aej20ps078myh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-关闭自动编译并设置「编译快捷键」为control-C&quot;&gt;&lt;a href=&quot;#5-关闭自动编译并设置「编译快捷键」为control-C&quot; class=&quot;headerlink&quot; title=&quot;5.关闭自动编译并设置「编译快捷键」为control+C&quot;&gt;&lt;/a&gt;5.关闭自动编译并设置「编译快捷键」为control+C&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/65e4f1e6gw1f9ykq9zigyj210c0ls0x6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/65e4f1e6gw1f9ykqk4kyvj21kw0mhn1s.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;6-关闭HTML、JSP所关联的设计器视图&quot;&gt;&lt;a href=&quot;#6-关闭HTML、JSP所关联的设计器视图&quot; class=&quot;headerlink&quot; title=&quot;6.关闭HTML、JSP所关联的设计器视图&quot;&gt;&lt;/a&gt;6.关闭HTML、JSP所关联的设计器视图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/65e4f1e6gw1f9ykrk0mxpj21jq0w4wjc.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;7-添加Ccip插件开发视图-amp-amp-SVN视图&quot;&gt;&lt;a href=&quot;#7-添加Ccip插件开发视图-amp-amp-SVN视图&quot; class=&quot;headerlink&quot; title=&quot;7.添加Ccip插件开发视图 &amp;amp;&amp;amp; SVN视图&quot;&gt;&lt;/a&gt;7.添加Ccip插件开发视图 &amp;amp;&amp;amp; SVN视图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/65e4f1e6gw1f9yks9iyjdj20ii0iqdhv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;8-设置系统编码&quot;&gt;&lt;a href=&quot;#8-设置系统编码&quot; class=&quot;headerlink&quot; title=&quot;8.设置系统编码&quot;&gt;&lt;/a&gt;8.设置系统编码&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-配置Maven路径&quot;&gt;&lt;a href=&quot;#1-配置Maven路径&quot; class=&quot;headerlink&quot; title=&quot;1.配置Maven路径&quot;&gt;&lt;/a&gt;1.配置Maven路径&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/la
    
    </summary>
    
      <category term="编程札记" scheme="http://zhenghe39.com/categories/%E7%BC%96%E7%A8%8B%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="Myeclipse" scheme="http://zhenghe39.com/tags/Myeclipse/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat对静态资源的缓存</title>
    <link href="http://zhenghe39.com/2016/11/15/Tomcat%E5%AF%B9%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%9A%84%E7%BC%93%E5%AD%98/"/>
    <id>http://zhenghe39.com/2016/11/15/Tomcat对静态资源的缓存/</id>
    <published>2016-11-15T04:50:47.000Z</published>
    <updated>2016-11-15T05:01:58.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Tomcat-Http-Dispatcher解析&quot;&gt;&lt;a href=&quot;#Tomcat-Http-Dispatcher解析&quot; class=&quot;headerlink&quot; title=&quot;Tomcat Http Dispatcher解析&quot;&gt;&lt;/a&gt;Tomcat Http Dispatcher解析&lt;/h3&gt;&lt;p&gt;对于所有Http请求都是访问抽象类&lt;code&gt;HttpServlet&lt;/code&gt;的实例，其子类包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JspServlet(JSP请求访问)&lt;/li&gt;
&lt;li&gt;自定义servlet(web.xml中配置的servlet映射的URL路径访问)&lt;/li&gt;
&lt;li&gt;DefaultServlet(静态资源访问，例如HTML pages、images、css、js等等)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Tomcat默认对静态资源提供etag、last-modifed&quot;&gt;&lt;a href=&quot;#Tomcat默认对静态资源提供etag、last-modifed&quot; class=&quot;headerlink&quot; title=&quot;Tomcat默认对静态资源提供etag、last_modifed&quot;&gt;&lt;/a&gt;Tomcat默认对静态资源提供etag、last_modifed&lt;/h3&gt;&lt;p&gt;对于第一次访问的静态资源，在DefaultServlet的serveResource方法中就给其Response设置了&lt;code&gt;Etag&lt;/code&gt;及&lt;code&gt;Last-Modified header&lt;/code&gt;返回给浏览器。浏览器下次访问相同静态资源的时候，会默认给Request带If-Modified-Since和if_no_match值，用于校验静态资源是否有改动。若未改动返回304，取浏览器的静态资源缓存使用(PS:Etag对应if_no_match值，Last-Modified对应If-Modified-Since值)。&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/8b826b79gw1f9spgaoj66j21300aggnl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Tomcat-Http-Dispatcher解析&quot;&gt;&lt;a href=&quot;#Tomcat-Http-Dispatcher解析&quot; class=&quot;headerlink&quot; title=&quot;Tomcat Http Dispatcher解析&quot;&gt;&lt;/a&gt;Tomcat Http Di
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Tomcat" scheme="http://zhenghe39.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Dom坐标参数的获取</title>
    <link href="http://zhenghe39.com/2016/11/14/Dom%E5%9D%90%E6%A0%87%E5%8F%82%E6%95%B0%E7%9A%84%E8%8E%B7%E5%8F%96/"/>
    <id>http://zhenghe39.com/2016/11/14/Dom坐标参数的获取/</id>
    <published>2016-11-14T15:16:58.000Z</published>
    <updated>2016-11-14T15:28:03.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;获取Dom相对于视窗的坐标&quot;&gt;&lt;a href=&quot;#获取Dom相对于视窗的坐标&quot; class=&quot;headerlink&quot; title=&quot;获取Dom相对于视窗的坐标&quot;&gt;&lt;/a&gt;获取Dom相对于视窗的坐标&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jQuery &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$el.offset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Native&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getOffset&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//返回一个TextRectangle对象，包含left, top, right和bottom几个只读属性，以px为单位来表示边界框相对视窗左上角的位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; box = el.getBoundingClientRect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    top: box.top + &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.pageYOffset - &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientTop,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    left: box.left + &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.pageXOffset - &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientLeft&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取Dom相对于父元素的坐标&quot;&gt;&lt;a href=&quot;#获取Dom相对于父元素的坐标&quot; class=&quot;headerlink&quot; title=&quot;获取Dom相对于父元素的坐标&quot;&gt;&lt;/a&gt;获取Dom相对于父元素的坐标&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//jQuery&amp;#10;$el.position();&amp;#10;//Native&amp;#10;&amp;#123;&amp;#10;  left:el.offsetLeft,&amp;#10;  top:el.offsetTop&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;鼠标事件对象的坐标参数&quot;&gt;&lt;a href=&quot;#鼠标事件对象的坐标参数&quot; class=&quot;headerlink&quot; title=&quot;鼠标事件对象的坐标参数&quot;&gt;&lt;/a&gt;鼠标事件对象的坐标参数&lt;/h3&gt;&lt;p&gt;&lt;code&gt;event.clientX&lt;/code&gt;和&lt;code&gt;event.pageX&lt;/code&gt;的参照点都是浏览器内容区域的左上角。不同的是，&lt;code&gt;clientX&lt;/code&gt;的参照点会随滚动条的移动而移动，而&lt;code&gt;pageX&lt;/code&gt;的参照点不会随滚动条而变动。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;获取Dom相对于视窗的坐标&quot;&gt;&lt;a href=&quot;#获取Dom相对于视窗的坐标&quot; class=&quot;headerlink&quot; title=&quot;获取Dom相对于视窗的坐标&quot;&gt;&lt;/a&gt;获取Dom相对于视窗的坐标&lt;/h3&gt;&lt;figure class=&quot;highlight java
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Dom" scheme="http://zhenghe39.com/tags/Dom/"/>
    
  </entry>
  
  <entry>
    <title>encodeURIComponent</title>
    <link href="http://zhenghe39.com/2016/11/14/encodeURIComponent/"/>
    <id>http://zhenghe39.com/2016/11/14/encodeURIComponent/</id>
    <published>2016-11-14T13:57:28.000Z</published>
    <updated>2016-11-14T15:08:04.000Z</updated>
    
    <content type="html">&lt;p&gt;最常见的通信错误是格式不正确的URL，没有使用encodeURIComponent对QueryString进行编码。&lt;br&gt;例如，下面这个URL格式就是不正确：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://www.yourdomain.com/?redir=http://www.someotherdomain.com?a=b&amp;#38;c=d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得对QueryString部分进行URI编码获得：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://www.yourdomain.com/?redir=http%eA%2F%2Fwww.someotherdomain.com%3Fa%3Db%26c%3Dd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;提供对QueryString进行编码的函数：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addQueryStringArg&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;url, name, value&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(url.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;) == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url += &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url += &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url += &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(name) + &lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt; +&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最常见的通信错误是格式不正确的URL，没有使用encodeURIComponent对QueryString进行编码。&lt;br&gt;例如，下面这个URL格式就是不正确：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Javascript" scheme="http://zhenghe39.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>搭建svn服务器</title>
    <link href="http://zhenghe39.com/2016/11/14/%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://zhenghe39.com/2016/11/14/搭建svn服务器/</id>
    <published>2016-11-14T11:46:49.000Z</published>
    <updated>2016-11-14T15:15:35.000Z</updated>
    
    <content type="html">&lt;p&gt;安装环境为Mac，而Mac本身已经自带了SVN服务端和客户端&lt;/p&gt;
&lt;h3 id=&quot;创建SVN-repository&quot;&gt;&lt;a href=&quot;#创建SVN-repository&quot; class=&quot;headerlink&quot; title=&quot;创建SVN repository&quot;&gt;&lt;/a&gt;创建SVN repository&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;svnadmin create /Users/ZHe/Documents/svn/repository&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置SVN用户权限&quot;&gt;&lt;a href=&quot;#配置SVN用户权限&quot; class=&quot;headerlink&quot; title=&quot;配置SVN用户权限&quot;&gt;&lt;/a&gt;配置SVN用户权限&lt;/h3&gt;&lt;p&gt;/Users/ZHe/Documents/svn/repository/conf目录下有三文件：authz，passwd，svnserve.conf&lt;br&gt;&lt;strong&gt;authz内容&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;### This file is an example authorization file for svnserve.&amp;#10;### Its format is identical to that of mod_authz_svn authorization&amp;#10;### files.&amp;#10;### As shown below each section defines authorizations for the path and&amp;#10;### (optional) repository specified by the section name.&amp;#10;### The authorizations follow. An authorization line can refer to:&amp;#10;###  - a single user,&amp;#10;###  - a group of users defined in a special [groups] section,&amp;#10;###  - an alias defined in a special [aliases] section,&amp;#10;###  - all authenticated users, using the &amp;#39;$authenticated&amp;#39; token,&amp;#10;###  - only anonymous users, using the &amp;#39;$anonymous&amp;#39; token,&amp;#10;###  - anyone, using the &amp;#39;*&amp;#39; wildcard.&amp;#10;###&amp;#10;### A match can be inverted by prefixing the rule with &amp;#39;~&amp;#39;. Rules can&amp;#10;### grant read (&amp;#39;r&amp;#39;) access, read-write (&amp;#39;rw&amp;#39;) access, or no access&amp;#10;### (&amp;#39;&amp;#39;).&amp;#10;&amp;#10;[aliases]&amp;#10;# joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average&amp;#10;&amp;#10;[groups]&amp;#10;# harry_and_sally = harry,sally&amp;#10;# harry_sally_and_joe = harry,sally,&amp;#38;joe&amp;#10;users = hxl,ZHe&amp;#10;&amp;#10;# [/foo/bar]&amp;#10;# harry = rw&amp;#10;# &amp;#38;joe = r&amp;#10;# * =&amp;#10;&amp;#10;[/]&amp;#10;@users = rw&amp;#10;&amp;#10;# [repository:/baz/fuz]&amp;#10;# @harry_and_sally = rw&amp;#10;# * = r&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;passwd内容&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;### This file is an example password file for svnserve.&amp;#10;### Its format is similar to that of svnserve.conf. As shown in the&amp;#10;### example below it contains one section labelled [users].&amp;#10;### The name and password for each user follow, one account per line.&amp;#10;&amp;#10;[users]&amp;#10;# harry = harryssecret&amp;#10;# sally = sallyssecret&amp;#10;&amp;#10;ZHe = 123&amp;#10;hxl = 123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;svnserve.conf内容&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;### This file controls the configuration of the svnserve daemon, if you&amp;#10;### use it to allow access to this repository.  (If you only allow&amp;#10;### access through http: and/or file: URLs, then this file is&amp;#10;### irrelevant.)&amp;#10;&amp;#10;### Visit http://subversion.apache.org/ for more information.&amp;#10;&amp;#10;[general]&amp;#10;### The anon-access and auth-access options control access to the&amp;#10;### repository for unauthenticated (a.k.a. anonymous) users and&amp;#10;### authenticated users, respectively.&amp;#10;### Valid values are &amp;#34;write&amp;#34;, &amp;#34;read&amp;#34;, and &amp;#34;none&amp;#34;.&amp;#10;### Setting the value to &amp;#34;none&amp;#34; prohibits both reading and writing;&amp;#10;### &amp;#34;read&amp;#34; allows read-only access, and &amp;#34;write&amp;#34; allows complete &amp;#10;### read/write access to the repository.&amp;#10;### The sample settings below are the defaults and specify that anonymous&amp;#10;### users have read-only access to the repository, while authenticated&amp;#10;### users have read and write access to the repository.&amp;#10;anon-access = read&amp;#10;auth-access = write&amp;#10;### The password-db option controls the location of the password&amp;#10;### database file.  Unless you specify a path starting with a /,&amp;#10;### the file&amp;#39;s location is relative to the directory containing&amp;#10;### this configuration file.&amp;#10;### If SASL is enabled (see below), this file will NOT be used.&amp;#10;### Uncomment the line below to use the default password file.&amp;#10;password-db = passwd&amp;#10;### The authz-db option controls the location of the authorization&amp;#10;### rules for path-based access control.  Unless you specify a path&amp;#10;### starting with a /, the file&amp;#39;s location is relative to the the&amp;#10;### directory containing this file.  If you don&amp;#39;t specify an&amp;#10;### authz-db, no path-based access control is done.&amp;#10;### Uncomment the line below to use the default authorization file.&amp;#10;authz-db = authz&amp;#10;### This option specifies the authentication realm of the repository.&amp;#10;### If two repositories have the same authentication realm, they should&amp;#10;### have the same password database, and vice versa.  The default realm&amp;#10;### is repository&amp;#39;s uuid.&amp;#10;# realm = My First Repository&amp;#10;### The force-username-case option causes svnserve to case-normalize&amp;#10;### usernames before comparing them against the authorization rules in the&amp;#10;### authz-db file configured above.  Valid values are &amp;#34;upper&amp;#34; (to upper-&amp;#10;### case the usernames), &amp;#34;lower&amp;#34; (to lowercase the usernames), and&amp;#10;### &amp;#34;none&amp;#34; (to compare usernames as-is without case conversion, which&amp;#10;### is the default behavior).&amp;#10;# force-username-case = none&amp;#10;&amp;#10;[sasl]&amp;#10;### This option specifies whether you want to use the Cyrus SASL&amp;#10;### library for authentication. Default is false.&amp;#10;### This section will be ignored if svnserve is not built with Cyrus&amp;#10;### SASL support; to check, run &amp;#39;svnserve --version&amp;#39; and look for a line&amp;#10;### reading &amp;#39;Cyrus SASL authentication is available.&amp;#39;&amp;#10;# use-sasl = true&amp;#10;### These options specify the desired strength of the security layer&amp;#10;### that you want SASL to provide. 0 means no encryption, 1 means&amp;#10;### integrity-checking only, values larger than 1 are correlated&amp;#10;### to the effective key length for encryption (e.g. 128 means 128-bit&amp;#10;### encryption). The values below are the defaults.&amp;#10;# min-encryption = 0&amp;#10;# max-encryption = 256&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;启动SVN服务器&quot;&gt;&lt;a href=&quot;#启动SVN服务器&quot; class=&quot;headerlink&quot; title=&quot;启动SVN服务器&quot;&gt;&lt;/a&gt;启动SVN服务器&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;svnserve -d -r /Users/ZHe/Documents/svn/repository&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;将项目导入SVN服务器&quot;&gt;&lt;a href=&quot;#将项目导入SVN服务器&quot; class=&quot;headerlink&quot; title=&quot;将项目导入SVN服务器&quot;&gt;&lt;/a&gt;将项目导入SVN服务器&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;svn import /Users/ZHe/Documents/MyEclipseProfessional2014/workflow_odoc http://192.168.202.71/svn/workflow_odoc/  --username zhenghe --password 9803dd -m &amp;#34;&amp;#21021;&amp;#22987;&amp;#23548;&amp;#20837;&amp;#34;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;将项目签出到本地工作目录&quot;&gt;&lt;a href=&quot;#将项目签出到本地工作目录&quot; class=&quot;headerlink&quot; title=&quot;将项目签出到本地工作目录&quot;&gt;&lt;/a&gt;将项目签出到本地工作目录&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;checkout http://192.168.202.71/svn/workflow_odoc -r HEAD --depth=infinity --force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;安装环境为Mac，而Mac本身已经自带了SVN服务端和客户端&lt;/p&gt;
&lt;h3 id=&quot;创建SVN-repository&quot;&gt;&lt;a href=&quot;#创建SVN-repository&quot; class=&quot;headerlink&quot; title=&quot;创建SVN repository&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="svn" scheme="http://zhenghe39.com/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB-Java驱动的使用</title>
    <link href="http://zhenghe39.com/2016/11/14/MongoDB-Java%E9%A9%B1%E5%8A%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://zhenghe39.com/2016/11/14/MongoDB-Java驱动的使用/</id>
    <published>2016-11-14T11:33:54.000Z</published>
    <updated>2016-11-14T11:41:59.000Z</updated>
    
    <content type="html">&lt;p&gt;使用的Mongodb-Java驱动版本为&lt;code&gt;mongo-2.10.1.jar&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取数据库连接&quot;&gt;&lt;a href=&quot;#获取数据库连接&quot; class=&quot;headerlink&quot; title=&quot;获取数据库连接&quot;&gt;&lt;/a&gt;获取数据库连接&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Mongo mongo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MongoClient(&lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;27017&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//连接mongodb服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DB db = mongo.getDB(&lt;span class=&quot;string&quot;&gt;&quot;UserDB&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//数据库“UserDB”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DBCollection deptCollection = db.getCollection(&lt;span class=&quot;string&quot;&gt;&quot;Dept&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//获得集合“Dept”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获得当前服务器下的所有数据库名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String str : mongo.getDatabaseNames()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获得当前数据库里面的所有聚集集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String str : db.getCollectionNames()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;聚集集合名称： &quot;&lt;/span&gt;+str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;增&quot;&gt;&lt;a href=&quot;#增&quot; class=&quot;headerlink&quot; title=&quot;增&quot;&gt;&lt;/a&gt;增&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DBObject dbObject=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject();&lt;span class=&quot;comment&quot;&gt;//document的实体对象，BSON数据类型在java中的抽象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbObject.put(&lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId(&lt;span class=&quot;string&quot;&gt;&quot;558ac250f6e449a1a8a7f7d5&quot;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//添加键-值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbObject.put(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbCollection.save(dbObject).getN()&lt;span class=&quot;comment&quot;&gt;//1条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbCollection.insert(dbObject, dbObject2).getN()&lt;span class=&quot;comment&quot;&gt;//多条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删&quot;&gt;&lt;a href=&quot;#删&quot; class=&quot;headerlink&quot; title=&quot;删&quot;&gt;&lt;/a&gt;删&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过document固有标识_id删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbCollection.remove(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId(&lt;span class=&quot;string&quot;&gt;&quot;558ac250f6e449a1a8a7f7d5&quot;&lt;/span&gt;))).getN();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过其他标识删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbCollection.remove(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;45&quot;&lt;/span&gt;)).getN();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;改&quot;&gt;&lt;a href=&quot;#改&quot; class=&quot;headerlink&quot; title=&quot;改&quot;&gt;&lt;/a&gt;改&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这种修改是除了_id没有变外的整个document替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbCollection.update(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;ssss&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;illlooooo&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这种修改是只修改某个键的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbCollection.update(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;$set&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Java&quot;&lt;/span&gt;)));&lt;span class=&quot;comment&quot;&gt;//修改操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查&quot;&gt;&lt;a href=&quot;#查&quot; class=&quot;headerlink&quot; title=&quot;查&quot;&gt;&lt;/a&gt;查&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//只查询一条数据，多条去第一条   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;findOne: &quot;&lt;/span&gt; + dbCollection.findOne());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;findOne: &quot;&lt;/span&gt; + dbCollection.findOne(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;tag&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;LV&quot;&lt;/span&gt;)));    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;findOne: &quot;&lt;/span&gt; + dbCollection.findOne(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;tag&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;LV&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;tag&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;)));&lt;span class=&quot;comment&quot;&gt;//显示&quot;tag&quot;这个键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//多记录查询：根据age查询documents&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;find age=45: &quot;&lt;/span&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dbCollection.find(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;45&quot;&lt;/span&gt;)).toArray());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用的Mongodb-Java驱动版本为&lt;code&gt;mongo-2.10.1.jar&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取数据库连接&quot;&gt;&lt;a href=&quot;#获取数据库连接&quot; class=&quot;headerlink&quot; title=&quot;获取数据库连接&quot;&gt;&lt;/a&gt;获取数据库连接&lt;
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="mongodb" scheme="http://zhenghe39.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Meta标签</title>
    <link href="http://zhenghe39.com/2016/11/14/meta%E6%A0%87%E7%AD%BE/"/>
    <id>http://zhenghe39.com/2016/11/14/meta标签/</id>
    <published>2016-11-14T10:27:59.000Z</published>
    <updated>2016-11-14T10:30:59.000Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用带有 &lt;code&gt;http-equiv&lt;/code&gt;属性的&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签时，服务器将把名称/值对添加到发送给浏览器的内容头部&lt;br&gt;例如:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;charset&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;iso-8859-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;expires&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;31 Dec 2008&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样发送到浏览器的头部就应该包含：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;content-type: text/html&amp;#10;charset:iso-8859-1&amp;#10;expires:31 Dec 2008&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然，只有浏览器可以接受这些附加的头部字段，并能以适当的方式使用它们时，这些字段才有意义。&lt;br&gt;Note：服务器至少要发送一个：&lt;code&gt;content-type:text/html&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;sp
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Html" scheme="http://zhenghe39.com/tags/Html/"/>
    
  </entry>
  
  <entry>
    <title>Javascript常用UI操作</title>
    <link href="http://zhenghe39.com/2016/11/14/Javascript%E5%B8%B8%E7%94%A8UI%E6%93%8D%E4%BD%9C/"/>
    <id>http://zhenghe39.com/2016/11/14/Javascript常用UI操作/</id>
    <published>2016-11-14T09:50:54.000Z</published>
    <updated>2016-11-14T10:20:29.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;元素节点、属性节点、文本节点&quot;&gt;&lt;a href=&quot;#元素节点、属性节点、文本节点&quot; class=&quot;headerlink&quot; title=&quot;元素节点、属性节点、文本节点&quot;&gt;&lt;/a&gt;元素节点、属性节点、文本节点&lt;/h3&gt;&lt;p&gt;每个节点都包含这三种属性nodeType、nodeValue、nodeName&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;analysisNode&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;node&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;nodeName: &quot;&lt;/span&gt;+node.nodeName+&lt;span class=&quot;string&quot;&gt;&quot; nodeType: &quot;&lt;/span&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node.nodeType+&lt;span class=&quot;string&quot;&gt;&quot; nodeValue: &quot;&lt;/span&gt;+node.nodeValue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; h3 = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;h3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;analysisNode(h3[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;analysisNode(h3[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].getAttributeNode(&lt;span class=&quot;string&quot;&gt;&quot;class&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;analysisNode(h3[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].firstChild);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//analysisNode(h3[0].value);注意：h3[0].value只是获取节点上的属性节点&quot;value&quot;的值，并不是获取属性节点value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取节点文本值&quot;&gt;&lt;a href=&quot;#获取节点文本值&quot; class=&quot;headerlink&quot; title=&quot;获取节点文本值&quot;&gt;&lt;/a&gt;获取节点文本值&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;test&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;搜索&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;常用链接&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; h3 = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;h3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ;i &amp;lt; h3.length; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(h3[i].firstChild.nodeValue);&lt;span class=&quot;comment&quot;&gt;//文本节点的值，用nodeValue获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取元素内部HTML&quot;&gt;&lt;a href=&quot;#获取元素内部HTML&quot; class=&quot;headerlink&quot; title=&quot;获取元素内部HTML&quot;&gt;&lt;/a&gt;获取元素内部HTML&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Native&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(ul[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].innerHTML);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jquery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log($(&lt;span class=&quot;string&quot;&gt;&quot;ul:first&quot;&lt;/span&gt;).html());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;计算子节点个数&quot;&gt;&lt;a href=&quot;#计算子节点个数&quot; class=&quot;headerlink&quot; title=&quot;计算子节点个数&quot;&gt;&lt;/a&gt;计算子节点个数&lt;/h3&gt;&lt;p&gt;若标签之间有缩进，那么两个标签之间的空文本节点也会计到个数里面&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.cnblogs.com/ZHeGeS/p/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;我的博客的随笔列表&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;我的随笔&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.cnblogs.com/ZHeGeS/MyComments.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;我发表过的评论列表&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;我的评论&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.cnblogs.com/ZHeGeS/OtherPosts.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;我评论过的随笔列表&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;我的参与&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.cnblogs.com/ZHeGeS/RecentComments.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;我的博客的评论列表&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;最新评论&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.cnblogs.com/ZHeGeS/tag/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;我的博客的标签列表&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;我的标签&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ul = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;ul&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;ul has &quot;&lt;/span&gt;+ul[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].childNodes.length+&lt;span class=&quot;string&quot;&gt;&quot; childNodes!&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建节点&quot;&gt;&lt;a href=&quot;#创建节点&quot; class=&quot;headerlink&quot; title=&quot;创建节点&quot;&gt;&lt;/a&gt;创建节点&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jQuery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;a class=&#39;link&#39; linktype=&#39;normal&#39; &amp;gt;Haha&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;).appendTo($(&lt;span class=&quot;string&quot;&gt;&quot;#container&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Native&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dom_link = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dom_link.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;link&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dom_link.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;linktype&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;normal&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dom_link.appendChild(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createTextNode(&lt;span class=&quot;string&quot;&gt;&#39;Haha&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;container&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;container.appendChild(dom_link);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除节点&quot;&gt;&lt;a href=&quot;#删除节点&quot; class=&quot;headerlink&quot; title=&quot;删除节点&quot;&gt;&lt;/a&gt;删除节点&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;el.parentNode.removeChild(el);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;替换节点&quot;&gt;&lt;a href=&quot;#替换节点&quot; class=&quot;headerlink&quot; title=&quot;替换节点&quot;&gt;&lt;/a&gt;替换节点&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Native&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;replaceEach&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;aNode, bNode&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (aNode == bNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bParentNode = bNode.parentNode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bParentNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; aParentNode = aNode.parentNode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (aParentNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tempNode = aNode.cloneNode(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bParentNode.replaceChild(tempNode, bNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            aParentNode.replaceChild(bNode, aNode);&lt;span class=&quot;comment&quot;&gt;//bNode虽然在文档中被替换掉，但bNode对象的引用还是在的！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;replaceEach(a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jquery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$li = $(&lt;span class=&quot;string&quot;&gt;&quot;ul:first li:eq(0)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;ul:first li:eq(1)&quot;&lt;/span&gt;).clone(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;).replaceAll($(&lt;span class=&quot;string&quot;&gt;&quot;ul:first li:eq(0)&quot;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//注意：replaceAll返回的并非被替换的那个元素，而是返回替换的元素！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;ul:first li:eq(1)&quot;&lt;/span&gt;).replaceWith($li);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;插入节点后面&quot;&gt;&lt;a href=&quot;#插入节点后面&quot; class=&quot;headerlink&quot; title=&quot;插入节点后面&quot;&gt;&lt;/a&gt;插入节点后面&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;insertAfter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;node, targetNode&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; targetParentNode = targetNode.parentNode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (targetParentNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (targetParentNode.lastChild == targetNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            targetParentNode.appendChild(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            targetParentNode.insertBefore(node, targetNode.nextSibling);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;判断checkbox是否勾选&quot;&gt;&lt;a href=&quot;#判断checkbox是否勾选&quot; class=&quot;headerlink&quot; title=&quot;判断checkbox是否勾选&quot;&gt;&lt;/a&gt;判断checkbox是否勾选&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; checkboxs = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&quot;input[type=&#39;checkbox&#39;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; checkboxs.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (checkboxs[i].checked) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断checkbox是否被选中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;选中多选框&quot;&gt;&lt;a href=&quot;#选中多选框&quot; class=&quot;headerlink&quot; title=&quot;选中多选框&quot;&gt;&lt;/a&gt;选中多选框&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;使多选框的&#39;多选2&#39;和&#39;多选4&#39;被选中&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;button3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;check1&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 多选1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;check2&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 多选2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;check3&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 多选3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;check4&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 多选4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//native&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;button3&#39;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; checkboxes = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&quot;[type=&#39;checkbox&#39;][name=&#39;c&#39;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;checkboxes.length; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; checkbox = checkboxes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;check2&#39;&lt;/span&gt; === checkbox.value || &lt;span class=&quot;string&quot;&gt;&#39;check4&#39;&lt;/span&gt; ===  checkbox.value)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            checkbox.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;checked&#39;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jQuery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#button3&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;:checkbox[name=&#39;c&#39;]&quot;&lt;/span&gt;).val([&lt;span class=&quot;string&quot;&gt;&quot;check2&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;check4&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;选中单选框&quot;&gt;&lt;a href=&quot;#选中单选框&quot; class=&quot;headerlink&quot; title=&quot;选中单选框&quot;&gt;&lt;/a&gt;选中单选框&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;使单选框的&#39;单选2&#39;被选中&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;button4&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;r&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;radio1&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 单选1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;r&quot;&lt;/span&gt;  &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;radio2&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 单选2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;r&quot;&lt;/span&gt;  &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;radio3&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; 单选3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//native&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;button4&#39;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; radioes = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;[type=&quot;radio&quot;][name=&quot;r&quot;]&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;radioes.length; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; radio = radioes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;radio2&#39;&lt;/span&gt; === radio.value)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            radio.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;checked&#39;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jQuery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#button4&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//即便是为一组 radio 赋值, val 参数中也应该使用数组.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//使用一个值不起作用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;:radio[name=&#39;r&#39;]&quot;&lt;/span&gt;).val([&lt;span class=&quot;string&quot;&gt;&quot;radio2&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;元素节点、属性节点、文本节点&quot;&gt;&lt;a href=&quot;#元素节点、属性节点、文本节点&quot; class=&quot;headerlink&quot; title=&quot;元素节点、属性节点、文本节点&quot;&gt;&lt;/a&gt;元素节点、属性节点、文本节点&lt;/h3&gt;&lt;p&gt;每个节点都包含这三种属性nodeType、n
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Javascript" scheme="http://zhenghe39.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS逻辑运算符小技巧</title>
    <link href="http://zhenghe39.com/2016/11/14/JS%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://zhenghe39.com/2016/11/14/JS逻辑运算符小技巧/</id>
    <published>2016-11-14T08:29:42.000Z</published>
    <updated>2016-11-14T08:36:50.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;!!&quot;&gt;&lt;/a&gt;!!&lt;/h3&gt;&lt;p&gt;&lt;code&gt;!!&lt;/code&gt;相当于三元运算符，返回boolean值&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ret = !!&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ret = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById ? &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;：当值是非空字符串/非零数字时返回true，而当值是空字符串、0或者null时返回false。&lt;/p&gt;
&lt;h3 id=&quot;amp-amp-和&quot;&gt;&lt;a href=&quot;#amp-amp-和&quot; class=&quot;headerlink&quot; title=&quot;&amp;amp;&amp;amp; 和 ||&quot;&gt;&lt;/a&gt;&amp;amp;&amp;amp; 和 ||&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;a() &amp;amp;&amp;amp; b()&lt;/code&gt;:如果执行a()后返回true，则执行b()并返回b的值；如果执行a()后返回false，则整个表达式返回a()的值，b()不执行；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a() || b()&lt;/code&gt; :如果执行a()后返回true，则整个表达式返回a()的值，b()不执行；如果执行a()后返回false，则执行b()并返回b()的值；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:非0的整数都为true，undefined、null和空字符串”” 为false&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alert((&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; || &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//结果4 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; || &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//结果3 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; || &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//结果4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;!!&quot;&gt;&lt;/a&gt;!!&lt;/h3&gt;&lt;p&gt;&lt;code&gt;!!&lt;/code&gt;相当于三元运算符，返回boolean值&lt;/p&gt;
&lt;figure class=&quot;highlight javascript
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Maven" scheme="http://zhenghe39.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>常见Maven插件的使用</title>
    <link href="http://zhenghe39.com/2016/11/14/%E5%B8%B8%E8%A7%81Maven%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://zhenghe39.com/2016/11/14/常见Maven插件的使用/</id>
    <published>2016-11-14T06:35:24.000Z</published>
    <updated>2016-11-14T07:30:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;maven-compiler-plugin&quot;&gt;&lt;a href=&quot;#maven-compiler-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-compiler-plugin&quot;&gt;&lt;/a&gt;maven-compiler-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：配置编译Java1.5版本的源文件，生成与JVM1.5兼容的字节码文件&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;1.5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;target&lt;/span&gt;&amp;gt;&lt;/span&gt;1.5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;target&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;maven-war-plugin&quot;&gt;&lt;a href=&quot;#maven-war-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-war-plugin&quot;&gt;&lt;/a&gt;maven-war-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：配置War的打包设置&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-war-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;attachClasses&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;attachClasses&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!—&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;输出也带有&lt;span class=&quot;attribute&quot;&gt;Web&lt;/span&gt;应用的源码&lt;span class=&quot;attribute&quot;&gt;Jar&lt;/span&gt;包 —&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;archiveClasses&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;archiveClasses&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!—&lt;/span&gt; 把&lt;span class=&quot;attribute&quot;&gt;.class&lt;/span&gt;打包为&lt;span class=&quot;attribute&quot;&gt;Jar&lt;/span&gt;包放置于&lt;span class=&quot;attribute&quot;&gt;lib&lt;/span&gt;目录下 —&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;maven-surefire-plugin&quot;&gt;&lt;a href=&quot;#maven-surefire-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-surefire-plugin&quot;&gt;&lt;/a&gt;maven-surefire-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：跳过单元测试&lt;/p&gt;
&lt;p&gt;方式一：Pom配置&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!—&lt;/span&gt; 跳过单元测试 —&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;gourpId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;gourpId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-surefire-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;skipTests&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;skipTests&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方式二：指令配置 &lt;/p&gt;
&lt;p&gt; &lt;code&gt;Mvn install -Dmaven.test.skip=true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tip:参数-D是Java自带的，其功能是通过命令行设置一个Java系统属性，Maven简单地重用了该参数，在准备插件的时候检查了系统属性，便实现了插件参数的配置。&lt;/p&gt;
&lt;h3 id=&quot;maven-clean-plugin&quot;&gt;&lt;a href=&quot;#maven-clean-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-clean-plugin&quot;&gt;&lt;/a&gt;maven-clean-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：清理Web-info/lib下面的依赖包&lt;/p&gt;
 &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!—&lt;/span&gt; 清除依赖包 —&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-clean-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;filesets&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;fileset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;directory&lt;/span&gt;&amp;gt;&lt;/span&gt;src/main/webapp/WEB-INF/lib&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;directory&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;fileset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;filesets&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;maven-dependency-plugin&quot;&gt;&lt;a href=&quot;#maven-dependency-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-dependency-plugin&quot;&gt;&lt;/a&gt;maven-dependency-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：Maven拷贝依赖包到WEB-INF/lib目录&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!—&lt;/span&gt; 拷贝依赖包 —&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-dependency-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;copy-dependencies&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;pre-install&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;copy-dependencies&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;outputDirectory&lt;/span&gt;&amp;gt;&lt;/span&gt;src/main/webapp/WEB-INF/lib&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;outputDirectory&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!—&lt;/span&gt; 插件不以项目整体打包/&lt;span class=&quot;attribute&quot;&gt;servlet&lt;/span&gt;、&lt;span class=&quot;attribute&quot;&gt;jsp&lt;/span&gt;与&lt;span class=&quot;attribute&quot;&gt;tomcat&lt;/span&gt;冲突 —&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;excludeArtifactIds&lt;/span&gt;&amp;gt;&lt;/span&gt;ccip-admin-plugin,servlet-api,jsp-api&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;excludeArtifactIds&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;maven-resources-plugin&quot;&gt;&lt;a href=&quot;#maven-resources-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-resources-plugin&quot;&gt;&lt;/a&gt;maven-resources-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：拷贝资源文件到编译后的.class所在目录&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 拷贝资源文件 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-resources-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;copy-resources&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;pre-install&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;copy-resources&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;outputDirectory&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;project.build.outputDirectory&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;outputDirectory&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;resources&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;resource&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;directory&lt;/span&gt;&amp;gt;&lt;/span&gt;src/main/resource&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;directory&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;filtering&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;filtering&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;resource&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;resources&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;build-helper-maven-plugin&quot;&gt;&lt;a href=&quot;#build-helper-maven-plugin&quot; class=&quot;headerlink&quot; title=&quot;build-helper-maven-plugin&quot;&gt;&lt;/a&gt;build-helper-maven-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：自定义Maven源文件目录&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 自定义源文件目录 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.codehaus.mojo&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;build-helper-maven-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.9&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;add-source&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;generate-sources&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;add-source&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;sources&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;basedir&amp;#125;/src/interface&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;basedir&amp;#125;/src/impl&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 我们可以通过在这里添加多个source节点，来添加任意多个源文件夹 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;sources&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;maven-antrun-plugin&quot;&gt;&lt;a href=&quot;#maven-antrun-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-antrun-plugin&quot;&gt;&lt;/a&gt;maven-antrun-plugin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt; ：Maven配置Ant任务(Pom中插件任务配置)&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-antrun-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;ant-validate&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;validate&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;run&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;echo&lt;/span&gt;&amp;gt;&lt;/span&gt;I&#39;m bound to validate phase.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;echo&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 打包 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;packing-plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;package&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;run&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ant&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;antfile&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;basedir&amp;#125;/build-all.xml&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;build.target&amp;#125;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 复制到ccip-admin下 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;copy-to-services&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;install&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;run&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;copy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;attribute&quot;&gt;todir&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;basedir&amp;#125;/../ccip-admin/src/main/webapp/plugin/interface/sys&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;attribute&quot;&gt;overwrite&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;fileset&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;dir&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;plugin.interface.sys.dir&amp;#125;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;copy&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;copy&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;todir&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;basedir&amp;#125;/../ccip-admin/src/main/webapp/plugin/impl/sys&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;attribute&quot;&gt;overwrite&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;fileset&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;dir&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;plugin.impl.sys.dir&amp;#125;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;copy&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 清理 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;clean-plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;clean&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;run&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;dir&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;basedir&amp;#125;/../ccip-admin/src/main/webapp/plugin&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ant&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;antfile&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;$&amp;#123;basedir&amp;#125;/build-all.xml&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;clean&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;maven-compiler-plugin&quot;&gt;&lt;a href=&quot;#maven-compiler-plugin&quot; class=&quot;headerlink&quot; title=&quot;maven-compiler-plugin&quot;&gt;&lt;/a&gt;maven-compiler-plugin&lt;/
    
    </summary>
    
      <category term="参考资料" scheme="http://zhenghe39.com/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="Maven" scheme="http://zhenghe39.com/tags/Maven/"/>
    
  </entry>
  
</feed>
